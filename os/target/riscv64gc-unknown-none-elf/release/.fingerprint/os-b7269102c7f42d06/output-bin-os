{"$message_type":"diagnostic","message":"unexpected end of macro invocation","code":null,"level":"error","spans":[{"file_name":"src/fs/dev/pipe.rs","byte_start":6791,"byte_end":6791,"line_start":219,"line_end":219,"column_start":43,"column_end":43,"is_primary":true,"text":[{"text":"                log!(\"[pipe write] yield.\");","highlight_start":43,"highlight_end":43}],"label":"missing tokens in macro arguments","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"while trying to match `,`","code":null,"level":"note","spans":[{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/log-0.4.21/src/macros.rs","byte_start":2309,"byte_end":2310,"line_start":61,"line_end":61,"column_start":15,"column_end":16,"is_primary":true,"text":[{"text":"    ($lvl:expr, $($arg:tt)+) => ($crate::log!(target: $crate::__private_api::module_path!(), $lvl, $($arg)+));","highlight_start":15,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: unexpected end of macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/fs/dev/pipe.rs:219:43\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m219\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                log!(\"[pipe write] yield.\");\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmissing tokens in macro arguments\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: while trying to match `,`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/log-0.4.21/src/macros.rs:61:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m61\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ($lvl:expr, $($arg:tt)+) => ($crate::log!(target: $crate::__private_api::module_path!(), $lvl, $($arg)+));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `OSInode` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/syscall/fs.rs","byte_start":3089,"byte_end":3096,"line_start":100,"line_end":100,"column_start":42,"column_end":49,"is_primary":true,"text":[{"text":"        let os_node = any.downcast_ref::<OSInode>().unwrap();","highlight_start":42,"highlight_end":49}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"struct `crate::fs::fat32::inode::OSInode` exists but is inaccessible","code":null,"level":"note","spans":[{"file_name":"src/fs/fat32/inode.rs","byte_start":175,"byte_end":193,"line_start":12,"line_end":12,"column_start":1,"column_end":19,"is_primary":true,"text":[{"text":"pub struct OSInode {","highlight_start":1,"highlight_end":19}],"label":"not accessible","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `OSInode` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/syscall/fs.rs:100:42\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m100\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let os_node = any.downcast_ref::<OSInode>().unwrap();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: struct `crate::fs::fat32::inode::OSInode` exists but is inaccessible\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/fs/fat32/inode.rs:12:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct OSInode {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mnot accessible\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find value `ROOT_INODE` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/syscall/fs.rs","byte_start":3228,"byte_end":3238,"line_start":103,"line_end":103,"column_start":17,"column_end":27,"is_primary":true,"text":[{"text":"        nlink = ROOT_INODE.get_link_num(block_id, block_offset);","highlight_start":17,"highlight_end":27}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `ROOT_INODE` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/syscall/fs.rs:103:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        nlink = ROOT_INODE.get_link_num(block_id, block_offset);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find value `ROOT_INODE` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/syscall/fs.rs","byte_start":4335,"byte_end":4345,"line_start":139,"line_end":139,"column_start":26,"column_end":36,"is_primary":true,"text":[{"text":"        if let Some(_) = ROOT_INODE.link(old.as_str(), new.as_str()) {","highlight_start":26,"highlight_end":36}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `ROOT_INODE` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/syscall/fs.rs:139:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m139\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if let Some(_) = ROOT_INODE.link(old.as_str(), new.as_str()) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find value `ROOT_INODE` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/syscall/fs.rs","byte_start":4730,"byte_end":4740,"line_start":154,"line_end":154,"column_start":26,"column_end":36,"is_primary":true,"text":[{"text":"    if let Some(inode) = ROOT_INODE.find(name.as_str()) {","highlight_start":26,"highlight_end":36}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `ROOT_INODE` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/syscall/fs.rs:154:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m154\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if let Some(inode) = ROOT_INODE.find(name.as_str()) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find value `ROOT_INODE` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/syscall/fs.rs","byte_start":4774,"byte_end":4784,"line_start":155,"line_end":155,"column_start":12,"column_end":22,"is_primary":true,"text":[{"text":"        if ROOT_INODE.get_link_num(inode.block_id, inode.block_offset) == 1 {","highlight_start":12,"highlight_end":22}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `ROOT_INODE` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/syscall/fs.rs:155:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m155\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if ROOT_INODE.get_link_num(inode.block_id, inode.block_offset) == 1 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find value `ROOT_INODE` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/syscall/fs.rs","byte_start":4943,"byte_end":4953,"line_start":159,"line_end":159,"column_start":16,"column_end":26,"is_primary":true,"text":[{"text":"        return ROOT_INODE.unlink(name.as_str());","highlight_start":16,"highlight_end":26}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `ROOT_INODE` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/syscall/fs.rs:159:16\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m159\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return ROOT_INODE.unlink(name.as_str());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find function `sys_exit` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/syscall/mod.rs","byte_start":1698,"byte_end":1706,"line_start":53,"line_end":53,"column_start":25,"column_end":33,"is_primary":true,"text":[{"text":"        SYSCALL_EXIT => sys_exit(args[0] as i32),","highlight_start":25,"highlight_end":33}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this function","code":null,"level":"help","spans":[{"file_name":"src/syscall/mod.rs","byte_start":720,"byte_end":720,"line_start":26,"line_end":26,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use fs::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::syscall::process::sys_exit;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find function `sys_exit` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/syscall/mod.rs:53:25\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        SYSCALL_EXIT => sys_exit(args[0] as i32),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this function\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::syscall::process::sys_exit;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find function `sys_yield` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/syscall/fs.rs","byte_start":875,"byte_end":938,"line_start":28,"line_end":28,"column_start":1,"column_end":64,"is_primary":false,"text":[{"text":"pub fn sys_read(fd: usize, buf: *const u8, len: usize) -> isize {","highlight_start":1,"highlight_end":64}],"label":"similarly named function `sys_read` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/syscall/mod.rs","byte_start":1749,"byte_end":1758,"line_start":54,"line_end":54,"column_start":26,"column_end":35,"is_primary":true,"text":[{"text":"        SYSCALL_YIELD => sys_yield(),","highlight_start":26,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a function with a similar name exists","code":null,"level":"help","spans":[{"file_name":"src/syscall/mod.rs","byte_start":1749,"byte_end":1758,"line_start":54,"line_end":54,"column_start":26,"column_end":35,"is_primary":true,"text":[{"text":"        SYSCALL_YIELD => sys_yield(),","highlight_start":26,"highlight_end":35}],"label":null,"suggested_replacement":"sys_read","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"consider importing this function","code":null,"level":"help","spans":[{"file_name":"src/syscall/mod.rs","byte_start":720,"byte_end":720,"line_start":26,"line_end":26,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use fs::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::syscall::process::sys_yield;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find function `sys_yield` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/syscall/mod.rs:54:26\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        SYSCALL_YIELD => sys_yield(),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0msrc/syscall/fs.rs:28:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn sys_read(fd: usize, buf: *const u8, len: usize) -> isize {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named function `sys_read` defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: a function with a similar name exists\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        SYSCALL_YIELD => \u001b[0m\u001b[0m\u001b[38;5;10msys_read\u001b[0m\u001b[0m(),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this function\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::syscall::process::sys_yield;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find function `sys_fork` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/syscall/mod.rs","byte_start":1826,"byte_end":1834,"line_start":56,"line_end":56,"column_start":25,"column_end":33,"is_primary":true,"text":[{"text":"        SYSCALL_FORK => sys_fork(),","highlight_start":25,"highlight_end":33}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this function","code":null,"level":"help","spans":[{"file_name":"src/syscall/mod.rs","byte_start":720,"byte_end":720,"line_start":26,"line_end":26,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use fs::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::syscall::process::sys_fork;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find function `sys_fork` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/syscall/mod.rs:56:25\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        SYSCALL_FORK => sys_fork(),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this function\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::syscall::process::sys_fork;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find function `sys_exec` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/syscall/mod.rs","byte_start":1862,"byte_end":1870,"line_start":57,"line_end":57,"column_start":25,"column_end":33,"is_primary":true,"text":[{"text":"        SYSCALL_EXEC => sys_exec(args[0] as *const u8),","highlight_start":25,"highlight_end":33}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this function","code":null,"level":"help","spans":[{"file_name":"src/syscall/mod.rs","byte_start":720,"byte_end":720,"line_start":26,"line_end":26,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use fs::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::syscall::process::sys_exec;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find function `sys_exec` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/syscall/mod.rs:57:25\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m57\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        SYSCALL_EXEC => sys_exec(args[0] as *const u8),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this function\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::syscall::process::sys_exec;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find function `sys_waitpid` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/syscall/process.rs","byte_start":1550,"byte_end":1578,"line_start":67,"line_end":67,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn sys_getpid() -> isize {","highlight_start":1,"highlight_end":29}],"label":"similarly named function `sys_getpid` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/syscall/mod.rs","byte_start":1921,"byte_end":1932,"line_start":58,"line_end":58,"column_start":28,"column_end":39,"is_primary":true,"text":[{"text":"        SYSCALL_WAITPID => sys_waitpid(args[0] as isize, args[1] as *mut i32),","highlight_start":28,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a function with a similar name exists","code":null,"level":"help","spans":[{"file_name":"src/syscall/mod.rs","byte_start":1921,"byte_end":1932,"line_start":58,"line_end":58,"column_start":28,"column_end":39,"is_primary":true,"text":[{"text":"        SYSCALL_WAITPID => sys_waitpid(args[0] as isize, args[1] as *mut i32),","highlight_start":28,"highlight_end":39}],"label":null,"suggested_replacement":"sys_getpid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"consider importing this function","code":null,"level":"help","spans":[{"file_name":"src/syscall/mod.rs","byte_start":720,"byte_end":720,"line_start":26,"line_end":26,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use fs::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::syscall::process::sys_waitpid;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find function `sys_waitpid` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/syscall/mod.rs:58:28\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        SYSCALL_WAITPID => sys_waitpid(args[0] as isize, args[1] as *mut i32),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0msrc/syscall/process.rs:67:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn sys_getpid() -> isize {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named function `sys_getpid` defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: a function with a similar name exists\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        SYSCALL_WAITPID => \u001b[0m\u001b[0m\u001b[38;5;10msys_getpid\u001b[0m\u001b[0m(args[0] as isize, args[1] as *mut i32),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this function\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::syscall::process::sys_waitpid;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find function `sys_get_time` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/syscall/process.rs","byte_start":1550,"byte_end":1578,"line_start":67,"line_end":67,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub fn sys_getpid() -> isize {","highlight_start":1,"highlight_end":29}],"label":"similarly named function `sys_getpid` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/syscall/mod.rs","byte_start":2001,"byte_end":2013,"line_start":59,"line_end":59,"column_start":29,"column_end":41,"is_primary":true,"text":[{"text":"        SYSCALL_GET_TIME => sys_get_time(args[0] as *mut TimeVal, args[1]),","highlight_start":29,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a function with a similar name exists","code":null,"level":"help","spans":[{"file_name":"src/syscall/mod.rs","byte_start":2001,"byte_end":2013,"line_start":59,"line_end":59,"column_start":29,"column_end":41,"is_primary":true,"text":[{"text":"        SYSCALL_GET_TIME => sys_get_time(args[0] as *mut TimeVal, args[1]),","highlight_start":29,"highlight_end":41}],"label":null,"suggested_replacement":"sys_getpid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"consider importing this function","code":null,"level":"help","spans":[{"file_name":"src/syscall/mod.rs","byte_start":720,"byte_end":720,"line_start":26,"line_end":26,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use fs::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::syscall::process::sys_get_time;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find function `sys_get_time` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/syscall/mod.rs:59:29\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m59\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        SYSCALL_GET_TIME => sys_get_time(args[0] as *mut TimeVal, args[1]),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0msrc/syscall/process.rs:67:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn sys_getpid() -> isize {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named function `sys_getpid` defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: a function with a similar name exists\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m59\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        SYSCALL_GET_TIME => \u001b[0m\u001b[0m\u001b[38;5;10msys_getpid\u001b[0m\u001b[0m(args[0] as *mut TimeVal, args[1]),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this function\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::syscall::process::sys_get_time;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `TimeVal` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/syscall/mod.rs","byte_start":2030,"byte_end":2037,"line_start":59,"line_end":59,"column_start":58,"column_end":65,"is_primary":true,"text":[{"text":"        SYSCALL_GET_TIME => sys_get_time(args[0] as *mut TimeVal, args[1]),","highlight_start":58,"highlight_end":65}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this struct","code":null,"level":"help","spans":[{"file_name":"src/syscall/mod.rs","byte_start":720,"byte_end":720,"line_start":26,"line_end":26,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use fs::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::syscall::process::TimeVal;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `TimeVal` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/syscall/mod.rs:59:58\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m59\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        SYSCALL_GET_TIME => sys_get_time(args[0] as *mut TimeVal, args[1]),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this struct\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::syscall::process::TimeVal;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `TaskInfo` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/syscall/mod.rs","byte_start":2108,"byte_end":2116,"line_start":60,"line_end":60,"column_start":60,"column_end":68,"is_primary":true,"text":[{"text":"        SYSCALL_TASK_INFO => sys_task_info(args[0] as *mut TaskInfo),","highlight_start":60,"highlight_end":68}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this struct","code":null,"level":"help","spans":[{"file_name":"src/syscall/mod.rs","byte_start":720,"byte_end":720,"line_start":26,"line_end":26,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use fs::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::syscall::process::TaskInfo;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `TaskInfo` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/syscall/mod.rs:60:60\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m60\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        SYSCALL_TASK_INFO => sys_task_info(args[0] as *mut TaskInfo),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this struct\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::syscall::process::TaskInfo;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find function `sys_mmap` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/syscall/mod.rs","byte_start":2143,"byte_end":2151,"line_start":61,"line_end":61,"column_start":25,"column_end":33,"is_primary":true,"text":[{"text":"        SYSCALL_MMAP => sys_mmap(args[0], args[1], args[2]),","highlight_start":25,"highlight_end":33}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this function","code":null,"level":"help","spans":[{"file_name":"src/syscall/mod.rs","byte_start":720,"byte_end":720,"line_start":26,"line_end":26,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use fs::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::syscall::process::sys_mmap;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find function `sys_mmap` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/syscall/mod.rs:61:25\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m61\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        SYSCALL_MMAP => sys_mmap(args[0], args[1], args[2]),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this function\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::syscall::process::sys_mmap;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find function `sys_munmap` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/syscall/mod.rs","byte_start":2206,"byte_end":2216,"line_start":62,"line_end":62,"column_start":27,"column_end":37,"is_primary":true,"text":[{"text":"        SYSCALL_MUNMAP => sys_munmap(args[0], args[1]),","highlight_start":27,"highlight_end":37}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this function","code":null,"level":"help","spans":[{"file_name":"src/syscall/mod.rs","byte_start":720,"byte_end":720,"line_start":26,"line_end":26,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use fs::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::syscall::process::sys_munmap;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find function `sys_munmap` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/syscall/mod.rs:62:27\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m62\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        SYSCALL_MUNMAP => sys_munmap(args[0], args[1]),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this function\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::syscall::process::sys_munmap;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find function `sys_sbrk` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/syscall/mod.rs","byte_start":2260,"byte_end":2268,"line_start":63,"line_end":63,"column_start":25,"column_end":33,"is_primary":true,"text":[{"text":"        SYSCALL_SBRK => sys_sbrk(args[0] as i32),","highlight_start":25,"highlight_end":33}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this function","code":null,"level":"help","spans":[{"file_name":"src/syscall/mod.rs","byte_start":720,"byte_end":720,"line_start":26,"line_end":26,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use fs::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::syscall::process::sys_sbrk;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find function `sys_sbrk` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/syscall/mod.rs:63:25\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m63\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        SYSCALL_SBRK => sys_sbrk(args[0] as i32),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this function\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::syscall::process::sys_sbrk;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find function `sys_spawn` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/syscall/fs.rs","byte_start":1594,"byte_end":1647,"line_start":50,"line_end":50,"column_start":1,"column_end":54,"is_primary":false,"text":[{"text":"pub fn sys_open(path: *const u8, flags: u32) -> isize {","highlight_start":1,"highlight_end":54}],"label":"similarly named function `sys_open` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/syscall/mod.rs","byte_start":2311,"byte_end":2320,"line_start":64,"line_end":64,"column_start":26,"column_end":35,"is_primary":true,"text":[{"text":"        SYSCALL_SPAWN => sys_spawn(args[0] as *const u8),","highlight_start":26,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a function with a similar name exists","code":null,"level":"help","spans":[{"file_name":"src/syscall/mod.rs","byte_start":2311,"byte_end":2320,"line_start":64,"line_end":64,"column_start":26,"column_end":35,"is_primary":true,"text":[{"text":"        SYSCALL_SPAWN => sys_spawn(args[0] as *const u8),","highlight_start":26,"highlight_end":35}],"label":null,"suggested_replacement":"sys_open","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"consider importing this function","code":null,"level":"help","spans":[{"file_name":"src/syscall/mod.rs","byte_start":720,"byte_end":720,"line_start":26,"line_end":26,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use fs::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::syscall::process::sys_spawn;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find function `sys_spawn` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/syscall/mod.rs:64:26\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m64\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        SYSCALL_SPAWN => sys_spawn(args[0] as *const u8),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0msrc/syscall/fs.rs:50:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn sys_open(path: *const u8, flags: u32) -> isize {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named function `sys_open` defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: a function with a similar name exists\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m64\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        SYSCALL_SPAWN => \u001b[0m\u001b[0m\u001b[38;5;10msys_open\u001b[0m\u001b[0m(args[0] as *const u8),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this function\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::syscall::process::sys_spawn;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find function `sys_set_priority` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/syscall/mod.rs","byte_start":2376,"byte_end":2392,"line_start":65,"line_end":65,"column_start":33,"column_end":49,"is_primary":true,"text":[{"text":"        SYSCALL_SET_PRIORITY => sys_set_priority(args[0] as isize),","highlight_start":33,"highlight_end":49}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this function","code":null,"level":"help","spans":[{"file_name":"src/syscall/mod.rs","byte_start":720,"byte_end":720,"line_start":26,"line_end":26,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use fs::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::syscall::process::sys_set_priority;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find function `sys_set_priority` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/syscall/mod.rs:65:33\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m65\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        SYSCALL_SET_PRIORITY => sys_set_priority(args[0] as isize),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this function\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::syscall::process::sys_set_priority;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find function `list_apps` in module `fs`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1900,"byte_end":1909,"line_start":76,"line_end":76,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"    fs::list_apps();","highlight_start":9,"highlight_end":18}],"label":"not found in `fs`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find function `list_apps` in module `fs`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:76:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m76\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fs::list_apps();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `fs`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this method takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/syscall/fs.rs","byte_start":774,"byte_end":832,"line_start":22,"line_end":22,"column_start":19,"column_end":77,"is_primary":false,"text":[{"text":"        file.write(UserBuffer::new(translated_byte_buffer(token, buf, len))) as isize","highlight_start":19,"highlight_end":77}],"label":"an argument of type `&[u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/syscall/fs.rs","byte_start":769,"byte_end":774,"line_start":22,"line_end":22,"column_start":14,"column_end":19,"is_primary":true,"text":[{"text":"        file.write(UserBuffer::new(translated_byte_buffer(token, buf, len))) as isize","highlight_start":14,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected `Option<&mut usize>`, found `UserBuffer`","code":null,"level":"note","spans":[{"file_name":"src/syscall/fs.rs","byte_start":775,"byte_end":831,"line_start":22,"line_end":22,"column_start":20,"column_end":76,"is_primary":true,"text":[{"text":"        file.write(UserBuffer::new(translated_byte_buffer(token, buf, len))) as isize","highlight_start":20,"highlight_end":76}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"expected enum `Option<&mut usize>`\n found struct `page_table::UserBuffer`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"method defined here","code":null,"level":"note","spans":[{"file_name":"src/fs/file_trait.rs","byte_start":595,"byte_end":600,"line_start":27,"line_end":27,"column_start":8,"column_end":13,"is_primary":true,"text":[{"text":"    fn write(&self, offset: Option<&mut usize>, buf: &[u8]) -> usize;","highlight_start":8,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/syscall/fs.rs","byte_start":774,"byte_end":832,"line_start":22,"line_end":22,"column_start":19,"column_end":77,"is_primary":true,"text":[{"text":"        file.write(UserBuffer::new(translated_byte_buffer(token, buf, len))) as isize","highlight_start":19,"highlight_end":77}],"label":null,"suggested_replacement":"(/* Option<&mut usize> */, /* &[u8] */)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this method takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/syscall/fs.rs:22:14\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        file.write(UserBuffer::new(translated_byte_buffer(token, buf, len))) as isize\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12man argument of type `&[u8]` is missing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: expected `Option<&mut usize>`, found `UserBuffer`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/syscall/fs.rs:22:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        file.write(UserBuffer::new(translated_byte_buffer(token, buf, len))) as isize\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected enum `\u001b[0m\u001b[0m\u001b[1m\u001b[35mOption<&mut usize>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m            found struct `\u001b[0m\u001b[0m\u001b[1m\u001b[35mpage_table::UserBuffer\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: method defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/fs/file_trait.rs:27:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn write(&self, offset: Option<&mut usize>, buf: &[u8]) -> usize;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        file.write\u001b[0m\u001b[0m\u001b[38;5;10m(/* Option<&mut usize> */, /* &[u8] */)\u001b[0m\u001b[0m as isize\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this method takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/syscall/fs.rs","byte_start":1493,"byte_end":1551,"line_start":44,"line_end":44,"column_start":18,"column_end":76,"is_primary":false,"text":[{"text":"        file.read(UserBuffer::new(translated_byte_buffer(token, buf, len))) as isize","highlight_start":18,"highlight_end":76}],"label":"an argument of type `&mut [u8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/syscall/fs.rs","byte_start":1489,"byte_end":1493,"line_start":44,"line_end":44,"column_start":14,"column_end":18,"is_primary":true,"text":[{"text":"        file.read(UserBuffer::new(translated_byte_buffer(token, buf, len))) as isize","highlight_start":14,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected `Option<&mut usize>`, found `UserBuffer`","code":null,"level":"note","spans":[{"file_name":"src/syscall/fs.rs","byte_start":1494,"byte_end":1550,"line_start":44,"line_end":44,"column_start":19,"column_end":75,"is_primary":true,"text":[{"text":"        file.read(UserBuffer::new(translated_byte_buffer(token, buf, len))) as isize","highlight_start":19,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"expected enum `Option<&mut usize>`\n found struct `page_table::UserBuffer`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"method defined here","code":null,"level":"note","spans":[{"file_name":"src/fs/file_trait.rs","byte_start":487,"byte_end":491,"line_start":25,"line_end":25,"column_start":8,"column_end":12,"is_primary":true,"text":[{"text":"    fn read(&self, offset: Option<&mut usize>, buf: &mut [u8]) -> usize;","highlight_start":8,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/syscall/fs.rs","byte_start":1493,"byte_end":1551,"line_start":44,"line_end":44,"column_start":18,"column_end":76,"is_primary":true,"text":[{"text":"        file.read(UserBuffer::new(translated_byte_buffer(token, buf, len))) as isize","highlight_start":18,"highlight_end":76}],"label":null,"suggested_replacement":"(/* Option<&mut usize> */, /* &mut [u8] */)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this method takes 2 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/syscall/fs.rs:44:14\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        file.read(UserBuffer::new(translated_byte_buffer(token, buf, len))) as isize\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12man argument of type `&mut [u8]` is missing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: expected `Option<&mut usize>`, found `UserBuffer`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/syscall/fs.rs:44:19\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        file.read(UserBuffer::new(translated_byte_buffer(token, buf, len))) as isize\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected enum `\u001b[0m\u001b[0m\u001b[1m\u001b[35mOption<&mut usize>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m            found struct `\u001b[0m\u001b[0m\u001b[1m\u001b[35mpage_table::UserBuffer\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: method defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/fs/file_trait.rs:25:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn read(&self, offset: Option<&mut usize>, buf: &mut [u8]) -> usize;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        file.read\u001b[0m\u001b[0m\u001b[38;5;10m(/* Option<&mut usize> */, /* &mut [u8] */)\u001b[0m\u001b[0m as isize\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find function `open_file` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/syscall/fs.rs","byte_start":1867,"byte_end":1876,"line_start":55,"line_end":55,"column_start":26,"column_end":35,"is_primary":true,"text":[{"text":"    if let Some(inode) = open_file(path.as_str(), OpenFlags::from_bits(flags).unwrap()) {","highlight_start":26,"highlight_end":35}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find function `open_file` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/syscall/fs.rs:55:26\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if let Some(inode) = open_file(path.as_str(), OpenFlags::from_bits(flags).unwrap()) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"struct `fs::layout::Stat` has no field named `dev`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/syscall/fs.rs","byte_start":3347,"byte_end":3350,"line_start":109,"line_end":109,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"        dev: 0,","highlight_start":9,"highlight_end":12}],"label":"`fs::layout::Stat` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"all struct fields are already assigned","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m\u001b[1m: struct `fs::layout::Stat` has no field named `dev`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/syscall/fs.rs:109:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m109\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        dev: 0,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m`fs::layout::Stat` does not have this field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: all struct fields are already assigned\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"struct `fs::layout::Stat` has no field named `ino`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/syscall/fs.rs","byte_start":3363,"byte_end":3366,"line_start":110,"line_end":110,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"        ino: ino,","highlight_start":9,"highlight_end":12}],"label":"`fs::layout::Stat` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"all struct fields are already assigned","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m\u001b[1m: struct `fs::layout::Stat` has no field named `ino`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/syscall/fs.rs:110:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m110\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ino: ino,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m`fs::layout::Stat` does not have this field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: all struct fields are already assigned\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"struct `fs::layout::Stat` has no field named `mode`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/syscall/fs.rs","byte_start":3381,"byte_end":3385,"line_start":111,"line_end":111,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"        mode: StatMode::FILE,","highlight_start":9,"highlight_end":13}],"label":"`fs::layout::Stat` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"all struct fields are already assigned","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m\u001b[1m: struct `fs::layout::Stat` has no field named `mode`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/syscall/fs.rs:111:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m111\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        mode: StatMode::FILE,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m`fs::layout::Stat` does not have this field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: all struct fields are already assigned\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no associated item named `FILE` found for struct `fs::layout::StatMode` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/syscall/fs.rs","byte_start":3397,"byte_end":3401,"line_start":111,"line_end":111,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"        mode: StatMode::FILE,","highlight_start":25,"highlight_end":29}],"label":"associated item not found in `StatMode`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":11460,"byte_end":11515,"line_start":364,"line_end":366,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $vis struct $BitFlags {","highlight_start":9,"highlight_end":32},{"text":"            bits: $T,","highlight_start":1,"highlight_end":22},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":"associated item `FILE` not found for this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/fs/layout.rs","byte_start":1282,"byte_end":3039,"line_start":42,"line_end":95,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"bitflags! {","highlight_start":1,"highlight_end":12},{"text":"    pub struct StatMode: u32 {","highlight_start":1,"highlight_end":31},{"text":"        ///bit mask for the file type bit field","highlight_start":1,"highlight_end":48},{"text":"        const S_IFMT    =   0o170000;","highlight_start":1,"highlight_end":38},{"text":"        ///socket","highlight_start":1,"highlight_end":18},{"text":"        const S_IFSOCK  =   0o140000;","highlight_start":1,"highlight_end":38},{"text":"        ///symbolic link","highlight_start":1,"highlight_end":25},{"text":"        const S_IFLNK   =   0o120000;","highlight_start":1,"highlight_end":38},{"text":"        ///regular file","highlight_start":1,"highlight_end":24},{"text":"        const S_IFREG   =   0o100000;","highlight_start":1,"highlight_end":38},{"text":"        ///block device","highlight_start":1,"highlight_end":24},{"text":"        const S_IFBLK   =   0o060000;","highlight_start":1,"highlight_end":38},{"text":"        ///directory","highlight_start":1,"highlight_end":21},{"text":"        const S_IFDIR   =   0o040000;","highlight_start":1,"highlight_end":38},{"text":"        ///character device","highlight_start":1,"highlight_end":28},{"text":"        const S_IFCHR   =   0o020000;","highlight_start":1,"highlight_end":38},{"text":"        ///FIFO","highlight_start":1,"highlight_end":16},{"text":"        const S_IFIFO   =   0o010000;","highlight_start":1,"highlight_end":38},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        ///set-user-ID bit (see execve(2))","highlight_start":1,"highlight_end":43},{"text":"        const S_ISUID   =   0o4000;","highlight_start":1,"highlight_end":36},{"text":"        ///set-group-ID bit (see below)","highlight_start":1,"highlight_end":40},{"text":"        const S_ISGID   =   0o2000;","highlight_start":1,"highlight_end":36},{"text":"        ///sticky bit (see below)","highlight_start":1,"highlight_end":34},{"text":"        const S_ISVTX   =   0o1000;","highlight_start":1,"highlight_end":36},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        ///owner has read, write, and execute permission","highlight_start":1,"highlight_end":57},{"text":"        const S_IRWXU   =   0o0700;","highlight_start":1,"highlight_end":36},{"text":"        ///owner has read permission","highlight_start":1,"highlight_end":37},{"text":"        const S_IRUSR   =   0o0400;","highlight_start":1,"highlight_end":36},{"text":"        ///owner has write permission","highlight_start":1,"highlight_end":38},{"text":"        const S_IWUSR   =   0o0200;","highlight_start":1,"highlight_end":36},{"text":"        ///owner has execute permission","highlight_start":1,"highlight_end":40},{"text":"        const S_IXUSR   =   0o0100;","highlight_start":1,"highlight_end":36},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        ///group has read, write, and execute permission","highlight_start":1,"highlight_end":57},{"text":"        const S_IRWXG   =   0o0070;","highlight_start":1,"highlight_end":36},{"text":"        ///group has read permission","highlight_start":1,"highlight_end":37},{"text":"        const S_IRGRP   =   0o0040;","highlight_start":1,"highlight_end":36},{"text":"        ///group has write permission","highlight_start":1,"highlight_end":38},{"text":"        const S_IWGRP   =   0o0020;","highlight_start":1,"highlight_end":36},{"text":"        ///group has execute permission","highlight_start":1,"highlight_end":40},{"text":"        const S_IXGRP   =   0o0010;","highlight_start":1,"highlight_end":36},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        ///others (not in group) have read, write,and execute permission","highlight_start":1,"highlight_end":73},{"text":"        const S_IRWXO   =   0o0007;","highlight_start":1,"highlight_end":36},{"text":"        ///others have read permission","highlight_start":1,"highlight_end":39},{"text":"        const S_IROTH   =   0o0004;","highlight_start":1,"highlight_end":36},{"text":"        ///others have write permission","highlight_start":1,"highlight_end":40},{"text":"        const S_IWOTH   =   0o0002;","highlight_start":1,"highlight_end":36},{"text":"        ///others have execute permission","highlight_start":1,"highlight_end":42},{"text":"        const S_IXOTH   =   0o0001;","highlight_start":1,"highlight_end":36},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"bitflags!","def_site_span":{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":11087,"byte_end":11108,"line_start":350,"line_end":350,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! bitflags {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"if you're trying to build a new `fs::layout::StatMode` consider using one of the following associated functions:\nfs::layout::StatMode::empty\nfs::layout::StatMode::all\nfs::layout::StatMode::from_bits\nfs::layout::StatMode::from_bits_truncate\nfs::layout::StatMode::from_bits_unchecked","code":null,"level":"note","spans":[{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":16771,"byte_end":16799,"line_start":526,"line_end":526,"column_start":13,"column_end":41,"is_primary":true,"text":[{"text":"            pub const fn empty() -> Self {","highlight_start":13,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":11525,"byte_end":11713,"line_start":368,"line_end":375,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        __impl_bitflags! {","highlight_start":9,"highlight_end":27},{"text":"            $BitFlags: $T {","highlight_start":1,"highlight_end":28},{"text":"                $(","highlight_start":1,"highlight_end":19},{"text":"                    $(#[$inner $($args)*])*","highlight_start":1,"highlight_end":44},{"text":"                    $Flag = $value;","highlight_start":1,"highlight_end":36},{"text":"                )*","highlight_start":1,"highlight_end":19},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/fs/layout.rs","byte_start":1282,"byte_end":3039,"line_start":42,"line_end":95,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"bitflags! {","highlight_start":1,"highlight_end":12},{"text":"    pub struct StatMode: u32 {","highlight_start":1,"highlight_end":31},{"text":"        ///bit mask for the file type bit field","highlight_start":1,"highlight_end":48},{"text":"        const S_IFMT    =   0o170000;","highlight_start":1,"highlight_end":38},{"text":"        ///socket","highlight_start":1,"highlight_end":18},{"text":"        const S_IFSOCK  =   0o140000;","highlight_start":1,"highlight_end":38},{"text":"        ///symbolic link","highlight_start":1,"highlight_end":25},{"text":"        const S_IFLNK   =   0o120000;","highlight_start":1,"highlight_end":38},{"text":"        ///regular file","highlight_start":1,"highlight_end":24},{"text":"        const S_IFREG   =   0o100000;","highlight_start":1,"highlight_end":38},{"text":"        ///block device","highlight_start":1,"highlight_end":24},{"text":"        const S_IFBLK   =   0o060000;","highlight_start":1,"highlight_end":38},{"text":"        ///directory","highlight_start":1,"highlight_end":21},{"text":"        const S_IFDIR   =   0o040000;","highlight_start":1,"highlight_end":38},{"text":"        ///character device","highlight_start":1,"highlight_end":28},{"text":"        const S_IFCHR   =   0o020000;","highlight_start":1,"highlight_end":38},{"text":"        ///FIFO","highlight_start":1,"highlight_end":16},{"text":"        const S_IFIFO   =   0o010000;","highlight_start":1,"highlight_end":38},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        ///set-user-ID bit (see execve(2))","highlight_start":1,"highlight_end":43},{"text":"        const S_ISUID   =   0o4000;","highlight_start":1,"highlight_end":36},{"text":"        ///set-group-ID bit (see below)","highlight_start":1,"highlight_end":40},{"text":"        const S_ISGID   =   0o2000;","highlight_start":1,"highlight_end":36},{"text":"        ///sticky bit (see below)","highlight_start":1,"highlight_end":34},{"text":"        const S_ISVTX   =   0o1000;","highlight_start":1,"highlight_end":36},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        ///owner has read, write, and execute permission","highlight_start":1,"highlight_end":57},{"text":"        const S_IRWXU   =   0o0700;","highlight_start":1,"highlight_end":36},{"text":"        ///owner has read permission","highlight_start":1,"highlight_end":37},{"text":"        const S_IRUSR   =   0o0400;","highlight_start":1,"highlight_end":36},{"text":"        ///owner has write permission","highlight_start":1,"highlight_end":38},{"text":"        const S_IWUSR   =   0o0200;","highlight_start":1,"highlight_end":36},{"text":"        ///owner has execute permission","highlight_start":1,"highlight_end":40},{"text":"        const S_IXUSR   =   0o0100;","highlight_start":1,"highlight_end":36},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        ///group has read, write, and execute permission","highlight_start":1,"highlight_end":57},{"text":"        const S_IRWXG   =   0o0070;","highlight_start":1,"highlight_end":36},{"text":"        ///group has read permission","highlight_start":1,"highlight_end":37},{"text":"        const S_IRGRP   =   0o0040;","highlight_start":1,"highlight_end":36},{"text":"        ///group has write permission","highlight_start":1,"highlight_end":38},{"text":"        const S_IWGRP   =   0o0020;","highlight_start":1,"highlight_end":36},{"text":"        ///group has execute permission","highlight_start":1,"highlight_end":40},{"text":"        const S_IXGRP   =   0o0010;","highlight_start":1,"highlight_end":36},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        ///others (not in group) have read, write,and execute permission","highlight_start":1,"highlight_end":73},{"text":"        const S_IRWXO   =   0o0007;","highlight_start":1,"highlight_end":36},{"text":"        ///others have read permission","highlight_start":1,"highlight_end":39},{"text":"        const S_IROTH   =   0o0004;","highlight_start":1,"highlight_end":36},{"text":"        ///others have write permission","highlight_start":1,"highlight_end":40},{"text":"        const S_IWOTH   =   0o0002;","highlight_start":1,"highlight_end":36},{"text":"        ///others have execute permission","highlight_start":1,"highlight_end":42},{"text":"        const S_IXOTH   =   0o0001;","highlight_start":1,"highlight_end":36},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"bitflags!","def_site_span":{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":11087,"byte_end":11108,"line_start":350,"line_end":350,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! bitflags {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"__impl_bitflags!","def_site_span":{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":12812,"byte_end":12840,"line_start":424,"line_end":424,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! __impl_bitflags {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":16938,"byte_end":16964,"line_start":532,"line_end":532,"column_start":13,"column_end":39,"is_primary":true,"text":[{"text":"            pub const fn all() -> Self {","highlight_start":13,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":11525,"byte_end":11713,"line_start":368,"line_end":375,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        __impl_bitflags! {","highlight_start":9,"highlight_end":27},{"text":"            $BitFlags: $T {","highlight_start":1,"highlight_end":28},{"text":"                $(","highlight_start":1,"highlight_end":19},{"text":"                    $(#[$inner $($args)*])*","highlight_start":1,"highlight_end":44},{"text":"                    $Flag = $value;","highlight_start":1,"highlight_end":36},{"text":"                )*","highlight_start":1,"highlight_end":19},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/fs/layout.rs","byte_start":1282,"byte_end":3039,"line_start":42,"line_end":95,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"bitflags! {","highlight_start":1,"highlight_end":12},{"text":"    pub struct StatMode: u32 {","highlight_start":1,"highlight_end":31},{"text":"        ///bit mask for the file type bit field","highlight_start":1,"highlight_end":48},{"text":"        const S_IFMT    =   0o170000;","highlight_start":1,"highlight_end":38},{"text":"        ///socket","highlight_start":1,"highlight_end":18},{"text":"        const S_IFSOCK  =   0o140000;","highlight_start":1,"highlight_end":38},{"text":"        ///symbolic link","highlight_start":1,"highlight_end":25},{"text":"        const S_IFLNK   =   0o120000;","highlight_start":1,"highlight_end":38},{"text":"        ///regular file","highlight_start":1,"highlight_end":24},{"text":"        const S_IFREG   =   0o100000;","highlight_start":1,"highlight_end":38},{"text":"        ///block device","highlight_start":1,"highlight_end":24},{"text":"        const S_IFBLK   =   0o060000;","highlight_start":1,"highlight_end":38},{"text":"        ///directory","highlight_start":1,"highlight_end":21},{"text":"        const S_IFDIR   =   0o040000;","highlight_start":1,"highlight_end":38},{"text":"        ///character device","highlight_start":1,"highlight_end":28},{"text":"        const S_IFCHR   =   0o020000;","highlight_start":1,"highlight_end":38},{"text":"        ///FIFO","highlight_start":1,"highlight_end":16},{"text":"        const S_IFIFO   =   0o010000;","highlight_start":1,"highlight_end":38},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        ///set-user-ID bit (see execve(2))","highlight_start":1,"highlight_end":43},{"text":"        const S_ISUID   =   0o4000;","highlight_start":1,"highlight_end":36},{"text":"        ///set-group-ID bit (see below)","highlight_start":1,"highlight_end":40},{"text":"        const S_ISGID   =   0o2000;","highlight_start":1,"highlight_end":36},{"text":"        ///sticky bit (see below)","highlight_start":1,"highlight_end":34},{"text":"        const S_ISVTX   =   0o1000;","highlight_start":1,"highlight_end":36},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        ///owner has read, write, and execute permission","highlight_start":1,"highlight_end":57},{"text":"        const S_IRWXU   =   0o0700;","highlight_start":1,"highlight_end":36},{"text":"        ///owner has read permission","highlight_start":1,"highlight_end":37},{"text":"        const S_IRUSR   =   0o0400;","highlight_start":1,"highlight_end":36},{"text":"        ///owner has write permission","highlight_start":1,"highlight_end":38},{"text":"        const S_IWUSR   =   0o0200;","highlight_start":1,"highlight_end":36},{"text":"        ///owner has execute permission","highlight_start":1,"highlight_end":40},{"text":"        const S_IXUSR   =   0o0100;","highlight_start":1,"highlight_end":36},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        ///group has read, write, and execute permission","highlight_start":1,"highlight_end":57},{"text":"        const S_IRWXG   =   0o0070;","highlight_start":1,"highlight_end":36},{"text":"        ///group has read permission","highlight_start":1,"highlight_end":37},{"text":"        const S_IRGRP   =   0o0040;","highlight_start":1,"highlight_end":36},{"text":"        ///group has write permission","highlight_start":1,"highlight_end":38},{"text":"        const S_IWGRP   =   0o0020;","highlight_start":1,"highlight_end":36},{"text":"        ///group has execute permission","highlight_start":1,"highlight_end":40},{"text":"        const S_IXGRP   =   0o0010;","highlight_start":1,"highlight_end":36},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        ///others (not in group) have read, write,and execute permission","highlight_start":1,"highlight_end":73},{"text":"        const S_IRWXO   =   0o0007;","highlight_start":1,"highlight_end":36},{"text":"        ///others have read permission","highlight_start":1,"highlight_end":39},{"text":"        const S_IROTH   =   0o0004;","highlight_start":1,"highlight_end":36},{"text":"        ///others have write permission","highlight_start":1,"highlight_end":40},{"text":"        const S_IWOTH   =   0o0002;","highlight_start":1,"highlight_end":36},{"text":"        ///others have execute permission","highlight_start":1,"highlight_end":42},{"text":"        const S_IXOTH   =   0o0001;","highlight_start":1,"highlight_end":36},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"bitflags!","def_site_span":{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":11087,"byte_end":11108,"line_start":350,"line_end":350,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! bitflags {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"__impl_bitflags!","def_site_span":{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":12812,"byte_end":12840,"line_start":424,"line_end":424,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! __impl_bitflags {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":17608,"byte_end":17679,"line_start":552,"line_end":552,"column_start":13,"column_end":84,"is_primary":true,"text":[{"text":"            pub const fn from_bits(bits: $T) -> $crate::_core::option::Option<Self> {","highlight_start":13,"highlight_end":84}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":11525,"byte_end":11713,"line_start":368,"line_end":375,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        __impl_bitflags! {","highlight_start":9,"highlight_end":27},{"text":"            $BitFlags: $T {","highlight_start":1,"highlight_end":28},{"text":"                $(","highlight_start":1,"highlight_end":19},{"text":"                    $(#[$inner $($args)*])*","highlight_start":1,"highlight_end":44},{"text":"                    $Flag = $value;","highlight_start":1,"highlight_end":36},{"text":"                )*","highlight_start":1,"highlight_end":19},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/fs/layout.rs","byte_start":1282,"byte_end":3039,"line_start":42,"line_end":95,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"bitflags! {","highlight_start":1,"highlight_end":12},{"text":"    pub struct StatMode: u32 {","highlight_start":1,"highlight_end":31},{"text":"        ///bit mask for the file type bit field","highlight_start":1,"highlight_end":48},{"text":"        const S_IFMT    =   0o170000;","highlight_start":1,"highlight_end":38},{"text":"        ///socket","highlight_start":1,"highlight_end":18},{"text":"        const S_IFSOCK  =   0o140000;","highlight_start":1,"highlight_end":38},{"text":"        ///symbolic link","highlight_start":1,"highlight_end":25},{"text":"        const S_IFLNK   =   0o120000;","highlight_start":1,"highlight_end":38},{"text":"        ///regular file","highlight_start":1,"highlight_end":24},{"text":"        const S_IFREG   =   0o100000;","highlight_start":1,"highlight_end":38},{"text":"        ///block device","highlight_start":1,"highlight_end":24},{"text":"        const S_IFBLK   =   0o060000;","highlight_start":1,"highlight_end":38},{"text":"        ///directory","highlight_start":1,"highlight_end":21},{"text":"        const S_IFDIR   =   0o040000;","highlight_start":1,"highlight_end":38},{"text":"        ///character device","highlight_start":1,"highlight_end":28},{"text":"        const S_IFCHR   =   0o020000;","highlight_start":1,"highlight_end":38},{"text":"        ///FIFO","highlight_start":1,"highlight_end":16},{"text":"        const S_IFIFO   =   0o010000;","highlight_start":1,"highlight_end":38},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        ///set-user-ID bit (see execve(2))","highlight_start":1,"highlight_end":43},{"text":"        const S_ISUID   =   0o4000;","highlight_start":1,"highlight_end":36},{"text":"        ///set-group-ID bit (see below)","highlight_start":1,"highlight_end":40},{"text":"        const S_ISGID   =   0o2000;","highlight_start":1,"highlight_end":36},{"text":"        ///sticky bit (see below)","highlight_start":1,"highlight_end":34},{"text":"        const S_ISVTX   =   0o1000;","highlight_start":1,"highlight_end":36},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        ///owner has read, write, and execute permission","highlight_start":1,"highlight_end":57},{"text":"        const S_IRWXU   =   0o0700;","highlight_start":1,"highlight_end":36},{"text":"        ///owner has read permission","highlight_start":1,"highlight_end":37},{"text":"        const S_IRUSR   =   0o0400;","highlight_start":1,"highlight_end":36},{"text":"        ///owner has write permission","highlight_start":1,"highlight_end":38},{"text":"        const S_IWUSR   =   0o0200;","highlight_start":1,"highlight_end":36},{"text":"        ///owner has execute permission","highlight_start":1,"highlight_end":40},{"text":"        const S_IXUSR   =   0o0100;","highlight_start":1,"highlight_end":36},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        ///group has read, write, and execute permission","highlight_start":1,"highlight_end":57},{"text":"        const S_IRWXG   =   0o0070;","highlight_start":1,"highlight_end":36},{"text":"        ///group has read permission","highlight_start":1,"highlight_end":37},{"text":"        const S_IRGRP   =   0o0040;","highlight_start":1,"highlight_end":36},{"text":"        ///group has write permission","highlight_start":1,"highlight_end":38},{"text":"        const S_IWGRP   =   0o0020;","highlight_start":1,"highlight_end":36},{"text":"        ///group has execute permission","highlight_start":1,"highlight_end":40},{"text":"        const S_IXGRP   =   0o0010;","highlight_start":1,"highlight_end":36},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        ///others (not in group) have read, write,and execute permission","highlight_start":1,"highlight_end":73},{"text":"        const S_IRWXO   =   0o0007;","highlight_start":1,"highlight_end":36},{"text":"        ///others have read permission","highlight_start":1,"highlight_end":39},{"text":"        const S_IROTH   =   0o0004;","highlight_start":1,"highlight_end":36},{"text":"        ///others have write permission","highlight_start":1,"highlight_end":40},{"text":"        const S_IWOTH   =   0o0002;","highlight_start":1,"highlight_end":36},{"text":"        ///others have execute permission","highlight_start":1,"highlight_end":42},{"text":"        const S_IXOTH   =   0o0001;","highlight_start":1,"highlight_end":36},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"bitflags!","def_site_span":{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":11087,"byte_end":11108,"line_start":350,"line_end":350,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! bitflags {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"__impl_bitflags!","def_site_span":{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":12812,"byte_end":12840,"line_start":424,"line_end":424,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! __impl_bitflags {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":18083,"byte_end":18132,"line_start":563,"line_end":563,"column_start":13,"column_end":62,"is_primary":true,"text":[{"text":"            pub const fn from_bits_truncate(bits: $T) -> Self {","highlight_start":13,"highlight_end":62}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":11525,"byte_end":11713,"line_start":368,"line_end":375,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        __impl_bitflags! {","highlight_start":9,"highlight_end":27},{"text":"            $BitFlags: $T {","highlight_start":1,"highlight_end":28},{"text":"                $(","highlight_start":1,"highlight_end":19},{"text":"                    $(#[$inner $($args)*])*","highlight_start":1,"highlight_end":44},{"text":"                    $Flag = $value;","highlight_start":1,"highlight_end":36},{"text":"                )*","highlight_start":1,"highlight_end":19},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/fs/layout.rs","byte_start":1282,"byte_end":3039,"line_start":42,"line_end":95,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"bitflags! {","highlight_start":1,"highlight_end":12},{"text":"    pub struct StatMode: u32 {","highlight_start":1,"highlight_end":31},{"text":"        ///bit mask for the file type bit field","highlight_start":1,"highlight_end":48},{"text":"        const S_IFMT    =   0o170000;","highlight_start":1,"highlight_end":38},{"text":"        ///socket","highlight_start":1,"highlight_end":18},{"text":"        const S_IFSOCK  =   0o140000;","highlight_start":1,"highlight_end":38},{"text":"        ///symbolic link","highlight_start":1,"highlight_end":25},{"text":"        const S_IFLNK   =   0o120000;","highlight_start":1,"highlight_end":38},{"text":"        ///regular file","highlight_start":1,"highlight_end":24},{"text":"        const S_IFREG   =   0o100000;","highlight_start":1,"highlight_end":38},{"text":"        ///block device","highlight_start":1,"highlight_end":24},{"text":"        const S_IFBLK   =   0o060000;","highlight_start":1,"highlight_end":38},{"text":"        ///directory","highlight_start":1,"highlight_end":21},{"text":"        const S_IFDIR   =   0o040000;","highlight_start":1,"highlight_end":38},{"text":"        ///character device","highlight_start":1,"highlight_end":28},{"text":"        const S_IFCHR   =   0o020000;","highlight_start":1,"highlight_end":38},{"text":"        ///FIFO","highlight_start":1,"highlight_end":16},{"text":"        const S_IFIFO   =   0o010000;","highlight_start":1,"highlight_end":38},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        ///set-user-ID bit (see execve(2))","highlight_start":1,"highlight_end":43},{"text":"        const S_ISUID   =   0o4000;","highlight_start":1,"highlight_end":36},{"text":"        ///set-group-ID bit (see below)","highlight_start":1,"highlight_end":40},{"text":"        const S_ISGID   =   0o2000;","highlight_start":1,"highlight_end":36},{"text":"        ///sticky bit (see below)","highlight_start":1,"highlight_end":34},{"text":"        const S_ISVTX   =   0o1000;","highlight_start":1,"highlight_end":36},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        ///owner has read, write, and execute permission","highlight_start":1,"highlight_end":57},{"text":"        const S_IRWXU   =   0o0700;","highlight_start":1,"highlight_end":36},{"text":"        ///owner has read permission","highlight_start":1,"highlight_end":37},{"text":"        const S_IRUSR   =   0o0400;","highlight_start":1,"highlight_end":36},{"text":"        ///owner has write permission","highlight_start":1,"highlight_end":38},{"text":"        const S_IWUSR   =   0o0200;","highlight_start":1,"highlight_end":36},{"text":"        ///owner has execute permission","highlight_start":1,"highlight_end":40},{"text":"        const S_IXUSR   =   0o0100;","highlight_start":1,"highlight_end":36},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        ///group has read, write, and execute permission","highlight_start":1,"highlight_end":57},{"text":"        const S_IRWXG   =   0o0070;","highlight_start":1,"highlight_end":36},{"text":"        ///group has read permission","highlight_start":1,"highlight_end":37},{"text":"        const S_IRGRP   =   0o0040;","highlight_start":1,"highlight_end":36},{"text":"        ///group has write permission","highlight_start":1,"highlight_end":38},{"text":"        const S_IWGRP   =   0o0020;","highlight_start":1,"highlight_end":36},{"text":"        ///group has execute permission","highlight_start":1,"highlight_end":40},{"text":"        const S_IXGRP   =   0o0010;","highlight_start":1,"highlight_end":36},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        ///others (not in group) have read, write,and execute permission","highlight_start":1,"highlight_end":73},{"text":"        const S_IRWXO   =   0o0007;","highlight_start":1,"highlight_end":36},{"text":"        ///others have read permission","highlight_start":1,"highlight_end":39},{"text":"        const S_IROTH   =   0o0004;","highlight_start":1,"highlight_end":36},{"text":"        ///others have write permission","highlight_start":1,"highlight_end":40},{"text":"        const S_IWOTH   =   0o0002;","highlight_start":1,"highlight_end":36},{"text":"        ///others have execute permission","highlight_start":1,"highlight_end":42},{"text":"        const S_IXOTH   =   0o0001;","highlight_start":1,"highlight_end":36},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"bitflags!","def_site_span":{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":11087,"byte_end":11108,"line_start":350,"line_end":350,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! bitflags {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"__impl_bitflags!","def_site_span":{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":12812,"byte_end":12840,"line_start":424,"line_end":424,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! __impl_bitflags {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":18789,"byte_end":18846,"line_start":579,"line_end":579,"column_start":13,"column_end":70,"is_primary":true,"text":[{"text":"            pub const unsafe fn from_bits_unchecked(bits: $T) -> Self {","highlight_start":13,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":11525,"byte_end":11713,"line_start":368,"line_end":375,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        __impl_bitflags! {","highlight_start":9,"highlight_end":27},{"text":"            $BitFlags: $T {","highlight_start":1,"highlight_end":28},{"text":"                $(","highlight_start":1,"highlight_end":19},{"text":"                    $(#[$inner $($args)*])*","highlight_start":1,"highlight_end":44},{"text":"                    $Flag = $value;","highlight_start":1,"highlight_end":36},{"text":"                )*","highlight_start":1,"highlight_end":19},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/fs/layout.rs","byte_start":1282,"byte_end":3039,"line_start":42,"line_end":95,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"bitflags! {","highlight_start":1,"highlight_end":12},{"text":"    pub struct StatMode: u32 {","highlight_start":1,"highlight_end":31},{"text":"        ///bit mask for the file type bit field","highlight_start":1,"highlight_end":48},{"text":"        const S_IFMT    =   0o170000;","highlight_start":1,"highlight_end":38},{"text":"        ///socket","highlight_start":1,"highlight_end":18},{"text":"        const S_IFSOCK  =   0o140000;","highlight_start":1,"highlight_end":38},{"text":"        ///symbolic link","highlight_start":1,"highlight_end":25},{"text":"        const S_IFLNK   =   0o120000;","highlight_start":1,"highlight_end":38},{"text":"        ///regular file","highlight_start":1,"highlight_end":24},{"text":"        const S_IFREG   =   0o100000;","highlight_start":1,"highlight_end":38},{"text":"        ///block device","highlight_start":1,"highlight_end":24},{"text":"        const S_IFBLK   =   0o060000;","highlight_start":1,"highlight_end":38},{"text":"        ///directory","highlight_start":1,"highlight_end":21},{"text":"        const S_IFDIR   =   0o040000;","highlight_start":1,"highlight_end":38},{"text":"        ///character device","highlight_start":1,"highlight_end":28},{"text":"        const S_IFCHR   =   0o020000;","highlight_start":1,"highlight_end":38},{"text":"        ///FIFO","highlight_start":1,"highlight_end":16},{"text":"        const S_IFIFO   =   0o010000;","highlight_start":1,"highlight_end":38},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        ///set-user-ID bit (see execve(2))","highlight_start":1,"highlight_end":43},{"text":"        const S_ISUID   =   0o4000;","highlight_start":1,"highlight_end":36},{"text":"        ///set-group-ID bit (see below)","highlight_start":1,"highlight_end":40},{"text":"        const S_ISGID   =   0o2000;","highlight_start":1,"highlight_end":36},{"text":"        ///sticky bit (see below)","highlight_start":1,"highlight_end":34},{"text":"        const S_ISVTX   =   0o1000;","highlight_start":1,"highlight_end":36},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        ///owner has read, write, and execute permission","highlight_start":1,"highlight_end":57},{"text":"        const S_IRWXU   =   0o0700;","highlight_start":1,"highlight_end":36},{"text":"        ///owner has read permission","highlight_start":1,"highlight_end":37},{"text":"        const S_IRUSR   =   0o0400;","highlight_start":1,"highlight_end":36},{"text":"        ///owner has write permission","highlight_start":1,"highlight_end":38},{"text":"        const S_IWUSR   =   0o0200;","highlight_start":1,"highlight_end":36},{"text":"        ///owner has execute permission","highlight_start":1,"highlight_end":40},{"text":"        const S_IXUSR   =   0o0100;","highlight_start":1,"highlight_end":36},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        ///group has read, write, and execute permission","highlight_start":1,"highlight_end":57},{"text":"        const S_IRWXG   =   0o0070;","highlight_start":1,"highlight_end":36},{"text":"        ///group has read permission","highlight_start":1,"highlight_end":37},{"text":"        const S_IRGRP   =   0o0040;","highlight_start":1,"highlight_end":36},{"text":"        ///group has write permission","highlight_start":1,"highlight_end":38},{"text":"        const S_IWGRP   =   0o0020;","highlight_start":1,"highlight_end":36},{"text":"        ///group has execute permission","highlight_start":1,"highlight_end":40},{"text":"        const S_IXGRP   =   0o0010;","highlight_start":1,"highlight_end":36},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        ///others (not in group) have read, write,and execute permission","highlight_start":1,"highlight_end":73},{"text":"        const S_IRWXO   =   0o0007;","highlight_start":1,"highlight_end":36},{"text":"        ///others have read permission","highlight_start":1,"highlight_end":39},{"text":"        const S_IROTH   =   0o0004;","highlight_start":1,"highlight_end":36},{"text":"        ///others have write permission","highlight_start":1,"highlight_end":40},{"text":"        const S_IWOTH   =   0o0002;","highlight_start":1,"highlight_end":36},{"text":"        ///others have execute permission","highlight_start":1,"highlight_end":42},{"text":"        const S_IXOTH   =   0o0001;","highlight_start":1,"highlight_end":36},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"bitflags!","def_site_span":{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":11087,"byte_end":11108,"line_start":350,"line_end":350,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! bitflags {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"__impl_bitflags!","def_site_span":{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":12812,"byte_end":12840,"line_start":424,"line_end":424,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! __impl_bitflags {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no associated item named `FILE` found for struct `fs::layout::StatMode` in the current scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/syscall/fs.rs:111:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m111\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        mode: StatMode::FILE,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9massociated item not found in `StatMode`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0msrc/fs/layout.rs:42:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m42\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mbitflags! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m43\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct StatMode: u32 {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ///bit mask for the file type bit field\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        const S_IFMT    =   0o170000;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m94\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m95\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12massociated item `FILE` not found for this struct\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: if you're trying to build a new `fs::layout::StatMode` consider using one of the following associated functions:\u001b[0m\n\u001b[0m      fs::layout::StatMode::empty\u001b[0m\n\u001b[0m      fs::layout::StatMode::all\u001b[0m\n\u001b[0m      fs::layout::StatMode::from_bits\u001b[0m\n\u001b[0m      fs::layout::StatMode::from_bits_truncate\u001b[0m\n\u001b[0m      fs::layout::StatMode::from_bits_unchecked\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/fs/layout.rs:42:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m42\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mbitflags! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m43\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct StatMode: u32 {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ///bit mask for the file type bit field\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        const S_IFMT    =   0o170000;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m94\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m95\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|_^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `__impl_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"struct `fs::layout::Stat` has no field named `nlink`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/syscall/fs.rs","byte_start":3411,"byte_end":3416,"line_start":112,"line_end":112,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"        nlink: nlink,","highlight_start":9,"highlight_end":14}],"label":"`fs::layout::Stat` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"all struct fields are already assigned","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m\u001b[1m: struct `fs::layout::Stat` has no field named `nlink`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/syscall/fs.rs:112:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m112\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        nlink: nlink,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m`fs::layout::Stat` does not have this field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: all struct fields are already assigned\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"struct `fs::layout::Stat` has no field named `pad`","code":{"code":"E0560","explanation":"An unknown field was specified into a structure.\n\nErroneous code example:\n\n```compile_fail,E0560\nstruct Simba {\n    mother: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 };\n// error: structure `Simba` has no field named `father`\n```\n\nVerify you didn't misspell the field's name or that the field exists. Example:\n\n```\nstruct Simba {\n    mother: u32,\n    father: u32,\n}\n\nlet s = Simba { mother: 1, father: 0 }; // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/syscall/fs.rs","byte_start":3433,"byte_end":3436,"line_start":113,"line_end":113,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"        pad: [0;7],","highlight_start":9,"highlight_end":12}],"label":"`fs::layout::Stat` does not have this field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"all struct fields are already assigned","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0560]\u001b[0m\u001b[0m\u001b[1m: struct `fs::layout::Stat` has no field named `pad`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/syscall/fs.rs:113:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pad: [0;7],\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m`fs::layout::Stat` does not have this field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: all struct fields are already assigned\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no associated item named `RDONLY` found for struct `fs::layout::OpenFlags` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/syscall/process.rs","byte_start":2679,"byte_end":2685,"line_start":94,"line_end":94,"column_start":66,"column_end":72,"is_primary":true,"text":[{"text":"    if let Some(app_inode) = open_file(path.as_str(), OpenFlags::RDONLY) {","highlight_start":66,"highlight_end":72}],"label":"associated item not found in `OpenFlags`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":11460,"byte_end":11515,"line_start":364,"line_end":366,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $vis struct $BitFlags {","highlight_start":9,"highlight_end":32},{"text":"            bits: $T,","highlight_start":1,"highlight_end":22},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":"associated item `RDONLY` not found for this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/fs/layout.rs","byte_start":87,"byte_end":997,"line_start":6,"line_end":32,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"bitflags! {","highlight_start":1,"highlight_end":12},{"text":"    pub struct OpenFlags: u32 {","highlight_start":1,"highlight_end":32},{"text":"        const O_RDONLY      =   0o0;","highlight_start":1,"highlight_end":37},{"text":"        const O_WRONLY      =   0o1;","highlight_start":1,"highlight_end":37},{"text":"        const O_RDWR        =   0o2;","highlight_start":1,"highlight_end":37},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        const O_CREAT       =   0o100;","highlight_start":1,"highlight_end":39},{"text":"        const O_EXCL        =   0o200;","highlight_start":1,"highlight_end":39},{"text":"        const O_NOCTTY      =   0o400;","highlight_start":1,"highlight_end":39},{"text":"        const O_TRUNC       =   0o1000;","highlight_start":1,"highlight_end":40},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        const O_APPEND      =   0o2000;","highlight_start":1,"highlight_end":40},{"text":"        const O_NONBLOCK    =   0o4000;","highlight_start":1,"highlight_end":40},{"text":"        const O_DSYNC       =   0o10000;","highlight_start":1,"highlight_end":41},{"text":"        const O_SYNC        =   0o4010000;","highlight_start":1,"highlight_end":43},{"text":"        const O_RSYNC       =   0o4010000;","highlight_start":1,"highlight_end":43},{"text":"        const O_DIRECTORY   =   0o200000;","highlight_start":1,"highlight_end":42},{"text":"        const O_NOFOLLOW    =   0o400000;","highlight_start":1,"highlight_end":42},{"text":"        const O_CLOEXEC     =   0o2000000;","highlight_start":1,"highlight_end":43},{"text":"        const O_ASYNC       =   0o20000;","highlight_start":1,"highlight_end":41},{"text":"        const O_DIRECT      =   0o40000;","highlight_start":1,"highlight_end":41},{"text":"        const O_LARGEFILE   =   0o100000;","highlight_start":1,"highlight_end":42},{"text":"        const O_NOATIME     =   0o1000000;","highlight_start":1,"highlight_end":43},{"text":"        const O_PATH        =   0o10000000;","highlight_start":1,"highlight_end":44},{"text":"        const O_TMPFILE     =   0o20200000;","highlight_start":1,"highlight_end":44},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"bitflags!","def_site_span":{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":11087,"byte_end":11108,"line_start":350,"line_end":350,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! bitflags {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"if you're trying to build a new `fs::layout::OpenFlags` consider using one of the following associated functions:\nfs::layout::OpenFlags::empty\nfs::layout::OpenFlags::all\nfs::layout::OpenFlags::from_bits\nfs::layout::OpenFlags::from_bits_truncate\nfs::layout::OpenFlags::from_bits_unchecked","code":null,"level":"note","spans":[{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":16771,"byte_end":16799,"line_start":526,"line_end":526,"column_start":13,"column_end":41,"is_primary":true,"text":[{"text":"            pub const fn empty() -> Self {","highlight_start":13,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":11525,"byte_end":11713,"line_start":368,"line_end":375,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        __impl_bitflags! {","highlight_start":9,"highlight_end":27},{"text":"            $BitFlags: $T {","highlight_start":1,"highlight_end":28},{"text":"                $(","highlight_start":1,"highlight_end":19},{"text":"                    $(#[$inner $($args)*])*","highlight_start":1,"highlight_end":44},{"text":"                    $Flag = $value;","highlight_start":1,"highlight_end":36},{"text":"                )*","highlight_start":1,"highlight_end":19},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/fs/layout.rs","byte_start":87,"byte_end":997,"line_start":6,"line_end":32,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"bitflags! {","highlight_start":1,"highlight_end":12},{"text":"    pub struct OpenFlags: u32 {","highlight_start":1,"highlight_end":32},{"text":"        const O_RDONLY      =   0o0;","highlight_start":1,"highlight_end":37},{"text":"        const O_WRONLY      =   0o1;","highlight_start":1,"highlight_end":37},{"text":"        const O_RDWR        =   0o2;","highlight_start":1,"highlight_end":37},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        const O_CREAT       =   0o100;","highlight_start":1,"highlight_end":39},{"text":"        const O_EXCL        =   0o200;","highlight_start":1,"highlight_end":39},{"text":"        const O_NOCTTY      =   0o400;","highlight_start":1,"highlight_end":39},{"text":"        const O_TRUNC       =   0o1000;","highlight_start":1,"highlight_end":40},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        const O_APPEND      =   0o2000;","highlight_start":1,"highlight_end":40},{"text":"        const O_NONBLOCK    =   0o4000;","highlight_start":1,"highlight_end":40},{"text":"        const O_DSYNC       =   0o10000;","highlight_start":1,"highlight_end":41},{"text":"        const O_SYNC        =   0o4010000;","highlight_start":1,"highlight_end":43},{"text":"        const O_RSYNC       =   0o4010000;","highlight_start":1,"highlight_end":43},{"text":"        const O_DIRECTORY   =   0o200000;","highlight_start":1,"highlight_end":42},{"text":"        const O_NOFOLLOW    =   0o400000;","highlight_start":1,"highlight_end":42},{"text":"        const O_CLOEXEC     =   0o2000000;","highlight_start":1,"highlight_end":43},{"text":"        const O_ASYNC       =   0o20000;","highlight_start":1,"highlight_end":41},{"text":"        const O_DIRECT      =   0o40000;","highlight_start":1,"highlight_end":41},{"text":"        const O_LARGEFILE   =   0o100000;","highlight_start":1,"highlight_end":42},{"text":"        const O_NOATIME     =   0o1000000;","highlight_start":1,"highlight_end":43},{"text":"        const O_PATH        =   0o10000000;","highlight_start":1,"highlight_end":44},{"text":"        const O_TMPFILE     =   0o20200000;","highlight_start":1,"highlight_end":44},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"bitflags!","def_site_span":{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":11087,"byte_end":11108,"line_start":350,"line_end":350,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! bitflags {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"__impl_bitflags!","def_site_span":{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":12812,"byte_end":12840,"line_start":424,"line_end":424,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! __impl_bitflags {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":16938,"byte_end":16964,"line_start":532,"line_end":532,"column_start":13,"column_end":39,"is_primary":true,"text":[{"text":"            pub const fn all() -> Self {","highlight_start":13,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":11525,"byte_end":11713,"line_start":368,"line_end":375,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        __impl_bitflags! {","highlight_start":9,"highlight_end":27},{"text":"            $BitFlags: $T {","highlight_start":1,"highlight_end":28},{"text":"                $(","highlight_start":1,"highlight_end":19},{"text":"                    $(#[$inner $($args)*])*","highlight_start":1,"highlight_end":44},{"text":"                    $Flag = $value;","highlight_start":1,"highlight_end":36},{"text":"                )*","highlight_start":1,"highlight_end":19},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/fs/layout.rs","byte_start":87,"byte_end":997,"line_start":6,"line_end":32,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"bitflags! {","highlight_start":1,"highlight_end":12},{"text":"    pub struct OpenFlags: u32 {","highlight_start":1,"highlight_end":32},{"text":"        const O_RDONLY      =   0o0;","highlight_start":1,"highlight_end":37},{"text":"        const O_WRONLY      =   0o1;","highlight_start":1,"highlight_end":37},{"text":"        const O_RDWR        =   0o2;","highlight_start":1,"highlight_end":37},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        const O_CREAT       =   0o100;","highlight_start":1,"highlight_end":39},{"text":"        const O_EXCL        =   0o200;","highlight_start":1,"highlight_end":39},{"text":"        const O_NOCTTY      =   0o400;","highlight_start":1,"highlight_end":39},{"text":"        const O_TRUNC       =   0o1000;","highlight_start":1,"highlight_end":40},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        const O_APPEND      =   0o2000;","highlight_start":1,"highlight_end":40},{"text":"        const O_NONBLOCK    =   0o4000;","highlight_start":1,"highlight_end":40},{"text":"        const O_DSYNC       =   0o10000;","highlight_start":1,"highlight_end":41},{"text":"        const O_SYNC        =   0o4010000;","highlight_start":1,"highlight_end":43},{"text":"        const O_RSYNC       =   0o4010000;","highlight_start":1,"highlight_end":43},{"text":"        const O_DIRECTORY   =   0o200000;","highlight_start":1,"highlight_end":42},{"text":"        const O_NOFOLLOW    =   0o400000;","highlight_start":1,"highlight_end":42},{"text":"        const O_CLOEXEC     =   0o2000000;","highlight_start":1,"highlight_end":43},{"text":"        const O_ASYNC       =   0o20000;","highlight_start":1,"highlight_end":41},{"text":"        const O_DIRECT      =   0o40000;","highlight_start":1,"highlight_end":41},{"text":"        const O_LARGEFILE   =   0o100000;","highlight_start":1,"highlight_end":42},{"text":"        const O_NOATIME     =   0o1000000;","highlight_start":1,"highlight_end":43},{"text":"        const O_PATH        =   0o10000000;","highlight_start":1,"highlight_end":44},{"text":"        const O_TMPFILE     =   0o20200000;","highlight_start":1,"highlight_end":44},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"bitflags!","def_site_span":{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":11087,"byte_end":11108,"line_start":350,"line_end":350,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! bitflags {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"__impl_bitflags!","def_site_span":{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":12812,"byte_end":12840,"line_start":424,"line_end":424,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! __impl_bitflags {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":17608,"byte_end":17679,"line_start":552,"line_end":552,"column_start":13,"column_end":84,"is_primary":true,"text":[{"text":"            pub const fn from_bits(bits: $T) -> $crate::_core::option::Option<Self> {","highlight_start":13,"highlight_end":84}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":11525,"byte_end":11713,"line_start":368,"line_end":375,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        __impl_bitflags! {","highlight_start":9,"highlight_end":27},{"text":"            $BitFlags: $T {","highlight_start":1,"highlight_end":28},{"text":"                $(","highlight_start":1,"highlight_end":19},{"text":"                    $(#[$inner $($args)*])*","highlight_start":1,"highlight_end":44},{"text":"                    $Flag = $value;","highlight_start":1,"highlight_end":36},{"text":"                )*","highlight_start":1,"highlight_end":19},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/fs/layout.rs","byte_start":87,"byte_end":997,"line_start":6,"line_end":32,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"bitflags! {","highlight_start":1,"highlight_end":12},{"text":"    pub struct OpenFlags: u32 {","highlight_start":1,"highlight_end":32},{"text":"        const O_RDONLY      =   0o0;","highlight_start":1,"highlight_end":37},{"text":"        const O_WRONLY      =   0o1;","highlight_start":1,"highlight_end":37},{"text":"        const O_RDWR        =   0o2;","highlight_start":1,"highlight_end":37},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        const O_CREAT       =   0o100;","highlight_start":1,"highlight_end":39},{"text":"        const O_EXCL        =   0o200;","highlight_start":1,"highlight_end":39},{"text":"        const O_NOCTTY      =   0o400;","highlight_start":1,"highlight_end":39},{"text":"        const O_TRUNC       =   0o1000;","highlight_start":1,"highlight_end":40},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        const O_APPEND      =   0o2000;","highlight_start":1,"highlight_end":40},{"text":"        const O_NONBLOCK    =   0o4000;","highlight_start":1,"highlight_end":40},{"text":"        const O_DSYNC       =   0o10000;","highlight_start":1,"highlight_end":41},{"text":"        const O_SYNC        =   0o4010000;","highlight_start":1,"highlight_end":43},{"text":"        const O_RSYNC       =   0o4010000;","highlight_start":1,"highlight_end":43},{"text":"        const O_DIRECTORY   =   0o200000;","highlight_start":1,"highlight_end":42},{"text":"        const O_NOFOLLOW    =   0o400000;","highlight_start":1,"highlight_end":42},{"text":"        const O_CLOEXEC     =   0o2000000;","highlight_start":1,"highlight_end":43},{"text":"        const O_ASYNC       =   0o20000;","highlight_start":1,"highlight_end":41},{"text":"        const O_DIRECT      =   0o40000;","highlight_start":1,"highlight_end":41},{"text":"        const O_LARGEFILE   =   0o100000;","highlight_start":1,"highlight_end":42},{"text":"        const O_NOATIME     =   0o1000000;","highlight_start":1,"highlight_end":43},{"text":"        const O_PATH        =   0o10000000;","highlight_start":1,"highlight_end":44},{"text":"        const O_TMPFILE     =   0o20200000;","highlight_start":1,"highlight_end":44},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"bitflags!","def_site_span":{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":11087,"byte_end":11108,"line_start":350,"line_end":350,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! bitflags {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"__impl_bitflags!","def_site_span":{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":12812,"byte_end":12840,"line_start":424,"line_end":424,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! __impl_bitflags {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":18083,"byte_end":18132,"line_start":563,"line_end":563,"column_start":13,"column_end":62,"is_primary":true,"text":[{"text":"            pub const fn from_bits_truncate(bits: $T) -> Self {","highlight_start":13,"highlight_end":62}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":11525,"byte_end":11713,"line_start":368,"line_end":375,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        __impl_bitflags! {","highlight_start":9,"highlight_end":27},{"text":"            $BitFlags: $T {","highlight_start":1,"highlight_end":28},{"text":"                $(","highlight_start":1,"highlight_end":19},{"text":"                    $(#[$inner $($args)*])*","highlight_start":1,"highlight_end":44},{"text":"                    $Flag = $value;","highlight_start":1,"highlight_end":36},{"text":"                )*","highlight_start":1,"highlight_end":19},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/fs/layout.rs","byte_start":87,"byte_end":997,"line_start":6,"line_end":32,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"bitflags! {","highlight_start":1,"highlight_end":12},{"text":"    pub struct OpenFlags: u32 {","highlight_start":1,"highlight_end":32},{"text":"        const O_RDONLY      =   0o0;","highlight_start":1,"highlight_end":37},{"text":"        const O_WRONLY      =   0o1;","highlight_start":1,"highlight_end":37},{"text":"        const O_RDWR        =   0o2;","highlight_start":1,"highlight_end":37},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        const O_CREAT       =   0o100;","highlight_start":1,"highlight_end":39},{"text":"        const O_EXCL        =   0o200;","highlight_start":1,"highlight_end":39},{"text":"        const O_NOCTTY      =   0o400;","highlight_start":1,"highlight_end":39},{"text":"        const O_TRUNC       =   0o1000;","highlight_start":1,"highlight_end":40},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        const O_APPEND      =   0o2000;","highlight_start":1,"highlight_end":40},{"text":"        const O_NONBLOCK    =   0o4000;","highlight_start":1,"highlight_end":40},{"text":"        const O_DSYNC       =   0o10000;","highlight_start":1,"highlight_end":41},{"text":"        const O_SYNC        =   0o4010000;","highlight_start":1,"highlight_end":43},{"text":"        const O_RSYNC       =   0o4010000;","highlight_start":1,"highlight_end":43},{"text":"        const O_DIRECTORY   =   0o200000;","highlight_start":1,"highlight_end":42},{"text":"        const O_NOFOLLOW    =   0o400000;","highlight_start":1,"highlight_end":42},{"text":"        const O_CLOEXEC     =   0o2000000;","highlight_start":1,"highlight_end":43},{"text":"        const O_ASYNC       =   0o20000;","highlight_start":1,"highlight_end":41},{"text":"        const O_DIRECT      =   0o40000;","highlight_start":1,"highlight_end":41},{"text":"        const O_LARGEFILE   =   0o100000;","highlight_start":1,"highlight_end":42},{"text":"        const O_NOATIME     =   0o1000000;","highlight_start":1,"highlight_end":43},{"text":"        const O_PATH        =   0o10000000;","highlight_start":1,"highlight_end":44},{"text":"        const O_TMPFILE     =   0o20200000;","highlight_start":1,"highlight_end":44},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"bitflags!","def_site_span":{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":11087,"byte_end":11108,"line_start":350,"line_end":350,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! bitflags {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"__impl_bitflags!","def_site_span":{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":12812,"byte_end":12840,"line_start":424,"line_end":424,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! __impl_bitflags {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":18789,"byte_end":18846,"line_start":579,"line_end":579,"column_start":13,"column_end":70,"is_primary":true,"text":[{"text":"            pub const unsafe fn from_bits_unchecked(bits: $T) -> Self {","highlight_start":13,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":11525,"byte_end":11713,"line_start":368,"line_end":375,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        __impl_bitflags! {","highlight_start":9,"highlight_end":27},{"text":"            $BitFlags: $T {","highlight_start":1,"highlight_end":28},{"text":"                $(","highlight_start":1,"highlight_end":19},{"text":"                    $(#[$inner $($args)*])*","highlight_start":1,"highlight_end":44},{"text":"                    $Flag = $value;","highlight_start":1,"highlight_end":36},{"text":"                )*","highlight_start":1,"highlight_end":19},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/fs/layout.rs","byte_start":87,"byte_end":997,"line_start":6,"line_end":32,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"bitflags! {","highlight_start":1,"highlight_end":12},{"text":"    pub struct OpenFlags: u32 {","highlight_start":1,"highlight_end":32},{"text":"        const O_RDONLY      =   0o0;","highlight_start":1,"highlight_end":37},{"text":"        const O_WRONLY      =   0o1;","highlight_start":1,"highlight_end":37},{"text":"        const O_RDWR        =   0o2;","highlight_start":1,"highlight_end":37},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        const O_CREAT       =   0o100;","highlight_start":1,"highlight_end":39},{"text":"        const O_EXCL        =   0o200;","highlight_start":1,"highlight_end":39},{"text":"        const O_NOCTTY      =   0o400;","highlight_start":1,"highlight_end":39},{"text":"        const O_TRUNC       =   0o1000;","highlight_start":1,"highlight_end":40},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        const O_APPEND      =   0o2000;","highlight_start":1,"highlight_end":40},{"text":"        const O_NONBLOCK    =   0o4000;","highlight_start":1,"highlight_end":40},{"text":"        const O_DSYNC       =   0o10000;","highlight_start":1,"highlight_end":41},{"text":"        const O_SYNC        =   0o4010000;","highlight_start":1,"highlight_end":43},{"text":"        const O_RSYNC       =   0o4010000;","highlight_start":1,"highlight_end":43},{"text":"        const O_DIRECTORY   =   0o200000;","highlight_start":1,"highlight_end":42},{"text":"        const O_NOFOLLOW    =   0o400000;","highlight_start":1,"highlight_end":42},{"text":"        const O_CLOEXEC     =   0o2000000;","highlight_start":1,"highlight_end":43},{"text":"        const O_ASYNC       =   0o20000;","highlight_start":1,"highlight_end":41},{"text":"        const O_DIRECT      =   0o40000;","highlight_start":1,"highlight_end":41},{"text":"        const O_LARGEFILE   =   0o100000;","highlight_start":1,"highlight_end":42},{"text":"        const O_NOATIME     =   0o1000000;","highlight_start":1,"highlight_end":43},{"text":"        const O_PATH        =   0o10000000;","highlight_start":1,"highlight_end":44},{"text":"        const O_TMPFILE     =   0o20200000;","highlight_start":1,"highlight_end":44},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"bitflags!","def_site_span":{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":11087,"byte_end":11108,"line_start":350,"line_end":350,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! bitflags {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"__impl_bitflags!","def_site_span":{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":12812,"byte_end":12840,"line_start":424,"line_end":424,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! __impl_bitflags {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"there is an associated constant `O_RDONLY` with a similar name","code":null,"level":"help","spans":[{"file_name":"src/syscall/process.rs","byte_start":2679,"byte_end":2685,"line_start":94,"line_end":94,"column_start":66,"column_end":72,"is_primary":true,"text":[{"text":"    if let Some(app_inode) = open_file(path.as_str(), OpenFlags::RDONLY) {","highlight_start":66,"highlight_end":72}],"label":null,"suggested_replacement":"O_RDONLY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no associated item named `RDONLY` found for struct `fs::layout::OpenFlags` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/syscall/process.rs:94:66\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m94\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    if let Some(app_inode) = open_file(path.as_str(), OpenFlags::RDONLY) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9massociated item not found in `OpenFlags`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0msrc/fs/layout.rs:6:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mbitflags! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct OpenFlags: u32 {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        const O_RDONLY      =   0o0;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        const O_WRONLY      =   0o1;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12massociated item `RDONLY` not found for this struct\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: if you're trying to build a new `fs::layout::OpenFlags` consider using one of the following associated functions:\u001b[0m\n\u001b[0m      fs::layout::OpenFlags::empty\u001b[0m\n\u001b[0m      fs::layout::OpenFlags::all\u001b[0m\n\u001b[0m      fs::layout::OpenFlags::from_bits\u001b[0m\n\u001b[0m      fs::layout::OpenFlags::from_bits_truncate\u001b[0m\n\u001b[0m      fs::layout::OpenFlags::from_bits_unchecked\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/fs/layout.rs:6:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mbitflags! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct OpenFlags: u32 {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        const O_RDONLY      =   0o0;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        const O_WRONLY      =   0o1;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|_^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `__impl_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: there is an associated constant `O_RDONLY` with a similar name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m94\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    if let Some(app_inode) = open_file(path.as_str(), OpenFlags::\u001b[0m\u001b[0m\u001b[38;5;10mO_RDONLY\u001b[0m\u001b[0m) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                  \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find function `open_file` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/syscall/process.rs","byte_start":2643,"byte_end":2652,"line_start":94,"line_end":94,"column_start":30,"column_end":39,"is_primary":true,"text":[{"text":"    if let Some(app_inode) = open_file(path.as_str(), OpenFlags::RDONLY) {","highlight_start":30,"highlight_end":39}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find function `open_file` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/syscall/process.rs:94:30\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m94\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if let Some(app_inode) = open_file(path.as_str(), OpenFlags::RDONLY) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no associated item named `RDONLY` found for struct `fs::layout::OpenFlags` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/syscall/process.rs","byte_start":7729,"byte_end":7735,"line_start":251,"line_end":251,"column_start":67,"column_end":73,"is_primary":true,"text":[{"text":"    if let Some(app_inode) = open_file(_path.as_str(), OpenFlags::RDONLY) {","highlight_start":67,"highlight_end":73}],"label":"associated item not found in `OpenFlags`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":11460,"byte_end":11515,"line_start":364,"line_end":366,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        $vis struct $BitFlags {","highlight_start":9,"highlight_end":32},{"text":"            bits: $T,","highlight_start":1,"highlight_end":22},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":"associated item `RDONLY` not found for this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/fs/layout.rs","byte_start":87,"byte_end":997,"line_start":6,"line_end":32,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"bitflags! {","highlight_start":1,"highlight_end":12},{"text":"    pub struct OpenFlags: u32 {","highlight_start":1,"highlight_end":32},{"text":"        const O_RDONLY      =   0o0;","highlight_start":1,"highlight_end":37},{"text":"        const O_WRONLY      =   0o1;","highlight_start":1,"highlight_end":37},{"text":"        const O_RDWR        =   0o2;","highlight_start":1,"highlight_end":37},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        const O_CREAT       =   0o100;","highlight_start":1,"highlight_end":39},{"text":"        const O_EXCL        =   0o200;","highlight_start":1,"highlight_end":39},{"text":"        const O_NOCTTY      =   0o400;","highlight_start":1,"highlight_end":39},{"text":"        const O_TRUNC       =   0o1000;","highlight_start":1,"highlight_end":40},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        const O_APPEND      =   0o2000;","highlight_start":1,"highlight_end":40},{"text":"        const O_NONBLOCK    =   0o4000;","highlight_start":1,"highlight_end":40},{"text":"        const O_DSYNC       =   0o10000;","highlight_start":1,"highlight_end":41},{"text":"        const O_SYNC        =   0o4010000;","highlight_start":1,"highlight_end":43},{"text":"        const O_RSYNC       =   0o4010000;","highlight_start":1,"highlight_end":43},{"text":"        const O_DIRECTORY   =   0o200000;","highlight_start":1,"highlight_end":42},{"text":"        const O_NOFOLLOW    =   0o400000;","highlight_start":1,"highlight_end":42},{"text":"        const O_CLOEXEC     =   0o2000000;","highlight_start":1,"highlight_end":43},{"text":"        const O_ASYNC       =   0o20000;","highlight_start":1,"highlight_end":41},{"text":"        const O_DIRECT      =   0o40000;","highlight_start":1,"highlight_end":41},{"text":"        const O_LARGEFILE   =   0o100000;","highlight_start":1,"highlight_end":42},{"text":"        const O_NOATIME     =   0o1000000;","highlight_start":1,"highlight_end":43},{"text":"        const O_PATH        =   0o10000000;","highlight_start":1,"highlight_end":44},{"text":"        const O_TMPFILE     =   0o20200000;","highlight_start":1,"highlight_end":44},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"bitflags!","def_site_span":{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":11087,"byte_end":11108,"line_start":350,"line_end":350,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! bitflags {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"if you're trying to build a new `fs::layout::OpenFlags` consider using one of the following associated functions:\nfs::layout::OpenFlags::empty\nfs::layout::OpenFlags::all\nfs::layout::OpenFlags::from_bits\nfs::layout::OpenFlags::from_bits_truncate\nfs::layout::OpenFlags::from_bits_unchecked","code":null,"level":"note","spans":[{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":16771,"byte_end":16799,"line_start":526,"line_end":526,"column_start":13,"column_end":41,"is_primary":true,"text":[{"text":"            pub const fn empty() -> Self {","highlight_start":13,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":11525,"byte_end":11713,"line_start":368,"line_end":375,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        __impl_bitflags! {","highlight_start":9,"highlight_end":27},{"text":"            $BitFlags: $T {","highlight_start":1,"highlight_end":28},{"text":"                $(","highlight_start":1,"highlight_end":19},{"text":"                    $(#[$inner $($args)*])*","highlight_start":1,"highlight_end":44},{"text":"                    $Flag = $value;","highlight_start":1,"highlight_end":36},{"text":"                )*","highlight_start":1,"highlight_end":19},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/fs/layout.rs","byte_start":87,"byte_end":997,"line_start":6,"line_end":32,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"bitflags! {","highlight_start":1,"highlight_end":12},{"text":"    pub struct OpenFlags: u32 {","highlight_start":1,"highlight_end":32},{"text":"        const O_RDONLY      =   0o0;","highlight_start":1,"highlight_end":37},{"text":"        const O_WRONLY      =   0o1;","highlight_start":1,"highlight_end":37},{"text":"        const O_RDWR        =   0o2;","highlight_start":1,"highlight_end":37},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        const O_CREAT       =   0o100;","highlight_start":1,"highlight_end":39},{"text":"        const O_EXCL        =   0o200;","highlight_start":1,"highlight_end":39},{"text":"        const O_NOCTTY      =   0o400;","highlight_start":1,"highlight_end":39},{"text":"        const O_TRUNC       =   0o1000;","highlight_start":1,"highlight_end":40},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        const O_APPEND      =   0o2000;","highlight_start":1,"highlight_end":40},{"text":"        const O_NONBLOCK    =   0o4000;","highlight_start":1,"highlight_end":40},{"text":"        const O_DSYNC       =   0o10000;","highlight_start":1,"highlight_end":41},{"text":"        const O_SYNC        =   0o4010000;","highlight_start":1,"highlight_end":43},{"text":"        const O_RSYNC       =   0o4010000;","highlight_start":1,"highlight_end":43},{"text":"        const O_DIRECTORY   =   0o200000;","highlight_start":1,"highlight_end":42},{"text":"        const O_NOFOLLOW    =   0o400000;","highlight_start":1,"highlight_end":42},{"text":"        const O_CLOEXEC     =   0o2000000;","highlight_start":1,"highlight_end":43},{"text":"        const O_ASYNC       =   0o20000;","highlight_start":1,"highlight_end":41},{"text":"        const O_DIRECT      =   0o40000;","highlight_start":1,"highlight_end":41},{"text":"        const O_LARGEFILE   =   0o100000;","highlight_start":1,"highlight_end":42},{"text":"        const O_NOATIME     =   0o1000000;","highlight_start":1,"highlight_end":43},{"text":"        const O_PATH        =   0o10000000;","highlight_start":1,"highlight_end":44},{"text":"        const O_TMPFILE     =   0o20200000;","highlight_start":1,"highlight_end":44},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"bitflags!","def_site_span":{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":11087,"byte_end":11108,"line_start":350,"line_end":350,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! bitflags {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"__impl_bitflags!","def_site_span":{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":12812,"byte_end":12840,"line_start":424,"line_end":424,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! __impl_bitflags {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":16938,"byte_end":16964,"line_start":532,"line_end":532,"column_start":13,"column_end":39,"is_primary":true,"text":[{"text":"            pub const fn all() -> Self {","highlight_start":13,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":11525,"byte_end":11713,"line_start":368,"line_end":375,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        __impl_bitflags! {","highlight_start":9,"highlight_end":27},{"text":"            $BitFlags: $T {","highlight_start":1,"highlight_end":28},{"text":"                $(","highlight_start":1,"highlight_end":19},{"text":"                    $(#[$inner $($args)*])*","highlight_start":1,"highlight_end":44},{"text":"                    $Flag = $value;","highlight_start":1,"highlight_end":36},{"text":"                )*","highlight_start":1,"highlight_end":19},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/fs/layout.rs","byte_start":87,"byte_end":997,"line_start":6,"line_end":32,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"bitflags! {","highlight_start":1,"highlight_end":12},{"text":"    pub struct OpenFlags: u32 {","highlight_start":1,"highlight_end":32},{"text":"        const O_RDONLY      =   0o0;","highlight_start":1,"highlight_end":37},{"text":"        const O_WRONLY      =   0o1;","highlight_start":1,"highlight_end":37},{"text":"        const O_RDWR        =   0o2;","highlight_start":1,"highlight_end":37},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        const O_CREAT       =   0o100;","highlight_start":1,"highlight_end":39},{"text":"        const O_EXCL        =   0o200;","highlight_start":1,"highlight_end":39},{"text":"        const O_NOCTTY      =   0o400;","highlight_start":1,"highlight_end":39},{"text":"        const O_TRUNC       =   0o1000;","highlight_start":1,"highlight_end":40},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        const O_APPEND      =   0o2000;","highlight_start":1,"highlight_end":40},{"text":"        const O_NONBLOCK    =   0o4000;","highlight_start":1,"highlight_end":40},{"text":"        const O_DSYNC       =   0o10000;","highlight_start":1,"highlight_end":41},{"text":"        const O_SYNC        =   0o4010000;","highlight_start":1,"highlight_end":43},{"text":"        const O_RSYNC       =   0o4010000;","highlight_start":1,"highlight_end":43},{"text":"        const O_DIRECTORY   =   0o200000;","highlight_start":1,"highlight_end":42},{"text":"        const O_NOFOLLOW    =   0o400000;","highlight_start":1,"highlight_end":42},{"text":"        const O_CLOEXEC     =   0o2000000;","highlight_start":1,"highlight_end":43},{"text":"        const O_ASYNC       =   0o20000;","highlight_start":1,"highlight_end":41},{"text":"        const O_DIRECT      =   0o40000;","highlight_start":1,"highlight_end":41},{"text":"        const O_LARGEFILE   =   0o100000;","highlight_start":1,"highlight_end":42},{"text":"        const O_NOATIME     =   0o1000000;","highlight_start":1,"highlight_end":43},{"text":"        const O_PATH        =   0o10000000;","highlight_start":1,"highlight_end":44},{"text":"        const O_TMPFILE     =   0o20200000;","highlight_start":1,"highlight_end":44},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"bitflags!","def_site_span":{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":11087,"byte_end":11108,"line_start":350,"line_end":350,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! bitflags {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"__impl_bitflags!","def_site_span":{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":12812,"byte_end":12840,"line_start":424,"line_end":424,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! __impl_bitflags {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":17608,"byte_end":17679,"line_start":552,"line_end":552,"column_start":13,"column_end":84,"is_primary":true,"text":[{"text":"            pub const fn from_bits(bits: $T) -> $crate::_core::option::Option<Self> {","highlight_start":13,"highlight_end":84}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":11525,"byte_end":11713,"line_start":368,"line_end":375,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        __impl_bitflags! {","highlight_start":9,"highlight_end":27},{"text":"            $BitFlags: $T {","highlight_start":1,"highlight_end":28},{"text":"                $(","highlight_start":1,"highlight_end":19},{"text":"                    $(#[$inner $($args)*])*","highlight_start":1,"highlight_end":44},{"text":"                    $Flag = $value;","highlight_start":1,"highlight_end":36},{"text":"                )*","highlight_start":1,"highlight_end":19},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/fs/layout.rs","byte_start":87,"byte_end":997,"line_start":6,"line_end":32,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"bitflags! {","highlight_start":1,"highlight_end":12},{"text":"    pub struct OpenFlags: u32 {","highlight_start":1,"highlight_end":32},{"text":"        const O_RDONLY      =   0o0;","highlight_start":1,"highlight_end":37},{"text":"        const O_WRONLY      =   0o1;","highlight_start":1,"highlight_end":37},{"text":"        const O_RDWR        =   0o2;","highlight_start":1,"highlight_end":37},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        const O_CREAT       =   0o100;","highlight_start":1,"highlight_end":39},{"text":"        const O_EXCL        =   0o200;","highlight_start":1,"highlight_end":39},{"text":"        const O_NOCTTY      =   0o400;","highlight_start":1,"highlight_end":39},{"text":"        const O_TRUNC       =   0o1000;","highlight_start":1,"highlight_end":40},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        const O_APPEND      =   0o2000;","highlight_start":1,"highlight_end":40},{"text":"        const O_NONBLOCK    =   0o4000;","highlight_start":1,"highlight_end":40},{"text":"        const O_DSYNC       =   0o10000;","highlight_start":1,"highlight_end":41},{"text":"        const O_SYNC        =   0o4010000;","highlight_start":1,"highlight_end":43},{"text":"        const O_RSYNC       =   0o4010000;","highlight_start":1,"highlight_end":43},{"text":"        const O_DIRECTORY   =   0o200000;","highlight_start":1,"highlight_end":42},{"text":"        const O_NOFOLLOW    =   0o400000;","highlight_start":1,"highlight_end":42},{"text":"        const O_CLOEXEC     =   0o2000000;","highlight_start":1,"highlight_end":43},{"text":"        const O_ASYNC       =   0o20000;","highlight_start":1,"highlight_end":41},{"text":"        const O_DIRECT      =   0o40000;","highlight_start":1,"highlight_end":41},{"text":"        const O_LARGEFILE   =   0o100000;","highlight_start":1,"highlight_end":42},{"text":"        const O_NOATIME     =   0o1000000;","highlight_start":1,"highlight_end":43},{"text":"        const O_PATH        =   0o10000000;","highlight_start":1,"highlight_end":44},{"text":"        const O_TMPFILE     =   0o20200000;","highlight_start":1,"highlight_end":44},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"bitflags!","def_site_span":{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":11087,"byte_end":11108,"line_start":350,"line_end":350,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! bitflags {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"__impl_bitflags!","def_site_span":{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":12812,"byte_end":12840,"line_start":424,"line_end":424,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! __impl_bitflags {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":18083,"byte_end":18132,"line_start":563,"line_end":563,"column_start":13,"column_end":62,"is_primary":true,"text":[{"text":"            pub const fn from_bits_truncate(bits: $T) -> Self {","highlight_start":13,"highlight_end":62}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":11525,"byte_end":11713,"line_start":368,"line_end":375,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        __impl_bitflags! {","highlight_start":9,"highlight_end":27},{"text":"            $BitFlags: $T {","highlight_start":1,"highlight_end":28},{"text":"                $(","highlight_start":1,"highlight_end":19},{"text":"                    $(#[$inner $($args)*])*","highlight_start":1,"highlight_end":44},{"text":"                    $Flag = $value;","highlight_start":1,"highlight_end":36},{"text":"                )*","highlight_start":1,"highlight_end":19},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/fs/layout.rs","byte_start":87,"byte_end":997,"line_start":6,"line_end":32,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"bitflags! {","highlight_start":1,"highlight_end":12},{"text":"    pub struct OpenFlags: u32 {","highlight_start":1,"highlight_end":32},{"text":"        const O_RDONLY      =   0o0;","highlight_start":1,"highlight_end":37},{"text":"        const O_WRONLY      =   0o1;","highlight_start":1,"highlight_end":37},{"text":"        const O_RDWR        =   0o2;","highlight_start":1,"highlight_end":37},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        const O_CREAT       =   0o100;","highlight_start":1,"highlight_end":39},{"text":"        const O_EXCL        =   0o200;","highlight_start":1,"highlight_end":39},{"text":"        const O_NOCTTY      =   0o400;","highlight_start":1,"highlight_end":39},{"text":"        const O_TRUNC       =   0o1000;","highlight_start":1,"highlight_end":40},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        const O_APPEND      =   0o2000;","highlight_start":1,"highlight_end":40},{"text":"        const O_NONBLOCK    =   0o4000;","highlight_start":1,"highlight_end":40},{"text":"        const O_DSYNC       =   0o10000;","highlight_start":1,"highlight_end":41},{"text":"        const O_SYNC        =   0o4010000;","highlight_start":1,"highlight_end":43},{"text":"        const O_RSYNC       =   0o4010000;","highlight_start":1,"highlight_end":43},{"text":"        const O_DIRECTORY   =   0o200000;","highlight_start":1,"highlight_end":42},{"text":"        const O_NOFOLLOW    =   0o400000;","highlight_start":1,"highlight_end":42},{"text":"        const O_CLOEXEC     =   0o2000000;","highlight_start":1,"highlight_end":43},{"text":"        const O_ASYNC       =   0o20000;","highlight_start":1,"highlight_end":41},{"text":"        const O_DIRECT      =   0o40000;","highlight_start":1,"highlight_end":41},{"text":"        const O_LARGEFILE   =   0o100000;","highlight_start":1,"highlight_end":42},{"text":"        const O_NOATIME     =   0o1000000;","highlight_start":1,"highlight_end":43},{"text":"        const O_PATH        =   0o10000000;","highlight_start":1,"highlight_end":44},{"text":"        const O_TMPFILE     =   0o20200000;","highlight_start":1,"highlight_end":44},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"bitflags!","def_site_span":{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":11087,"byte_end":11108,"line_start":350,"line_end":350,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! bitflags {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"__impl_bitflags!","def_site_span":{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":12812,"byte_end":12840,"line_start":424,"line_end":424,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! __impl_bitflags {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":18789,"byte_end":18846,"line_start":579,"line_end":579,"column_start":13,"column_end":70,"is_primary":true,"text":[{"text":"            pub const unsafe fn from_bits_unchecked(bits: $T) -> Self {","highlight_start":13,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":11525,"byte_end":11713,"line_start":368,"line_end":375,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        __impl_bitflags! {","highlight_start":9,"highlight_end":27},{"text":"            $BitFlags: $T {","highlight_start":1,"highlight_end":28},{"text":"                $(","highlight_start":1,"highlight_end":19},{"text":"                    $(#[$inner $($args)*])*","highlight_start":1,"highlight_end":44},{"text":"                    $Flag = $value;","highlight_start":1,"highlight_end":36},{"text":"                )*","highlight_start":1,"highlight_end":19},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/fs/layout.rs","byte_start":87,"byte_end":997,"line_start":6,"line_end":32,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"bitflags! {","highlight_start":1,"highlight_end":12},{"text":"    pub struct OpenFlags: u32 {","highlight_start":1,"highlight_end":32},{"text":"        const O_RDONLY      =   0o0;","highlight_start":1,"highlight_end":37},{"text":"        const O_WRONLY      =   0o1;","highlight_start":1,"highlight_end":37},{"text":"        const O_RDWR        =   0o2;","highlight_start":1,"highlight_end":37},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        const O_CREAT       =   0o100;","highlight_start":1,"highlight_end":39},{"text":"        const O_EXCL        =   0o200;","highlight_start":1,"highlight_end":39},{"text":"        const O_NOCTTY      =   0o400;","highlight_start":1,"highlight_end":39},{"text":"        const O_TRUNC       =   0o1000;","highlight_start":1,"highlight_end":40},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        const O_APPEND      =   0o2000;","highlight_start":1,"highlight_end":40},{"text":"        const O_NONBLOCK    =   0o4000;","highlight_start":1,"highlight_end":40},{"text":"        const O_DSYNC       =   0o10000;","highlight_start":1,"highlight_end":41},{"text":"        const O_SYNC        =   0o4010000;","highlight_start":1,"highlight_end":43},{"text":"        const O_RSYNC       =   0o4010000;","highlight_start":1,"highlight_end":43},{"text":"        const O_DIRECTORY   =   0o200000;","highlight_start":1,"highlight_end":42},{"text":"        const O_NOFOLLOW    =   0o400000;","highlight_start":1,"highlight_end":42},{"text":"        const O_CLOEXEC     =   0o2000000;","highlight_start":1,"highlight_end":43},{"text":"        const O_ASYNC       =   0o20000;","highlight_start":1,"highlight_end":41},{"text":"        const O_DIRECT      =   0o40000;","highlight_start":1,"highlight_end":41},{"text":"        const O_LARGEFILE   =   0o100000;","highlight_start":1,"highlight_end":42},{"text":"        const O_NOATIME     =   0o1000000;","highlight_start":1,"highlight_end":43},{"text":"        const O_PATH        =   0o10000000;","highlight_start":1,"highlight_end":44},{"text":"        const O_TMPFILE     =   0o20200000;","highlight_start":1,"highlight_end":44},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"bitflags!","def_site_span":{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":11087,"byte_end":11108,"line_start":350,"line_end":350,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! bitflags {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"__impl_bitflags!","def_site_span":{"file_name":"/home/wanghaoyu/.cargo/registry/src/mirrors.ustc.edu.cn-61ef6e0cd06fb9b8/bitflags-1.3.2/src/lib.rs","byte_start":12812,"byte_end":12840,"line_start":424,"line_end":424,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! __impl_bitflags {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"there is an associated constant `O_RDONLY` with a similar name","code":null,"level":"help","spans":[{"file_name":"src/syscall/process.rs","byte_start":7729,"byte_end":7735,"line_start":251,"line_end":251,"column_start":67,"column_end":73,"is_primary":true,"text":[{"text":"    if let Some(app_inode) = open_file(_path.as_str(), OpenFlags::RDONLY) {","highlight_start":67,"highlight_end":73}],"label":null,"suggested_replacement":"O_RDONLY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no associated item named `RDONLY` found for struct `fs::layout::OpenFlags` in the current scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/syscall/process.rs:251:67\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m251\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    if let Some(app_inode) = open_file(_path.as_str(), OpenFlags::RDONLY) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9massociated item not found in `OpenFlags`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0msrc/fs/layout.rs:6:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mbitflags! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct OpenFlags: u32 {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        const O_RDONLY      =   0o0;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        const O_WRONLY      =   0o1;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12massociated item `RDONLY` not found for this struct\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: if you're trying to build a new `fs::layout::OpenFlags` consider using one of the following associated functions:\u001b[0m\n\u001b[0m      fs::layout::OpenFlags::empty\u001b[0m\n\u001b[0m      fs::layout::OpenFlags::all\u001b[0m\n\u001b[0m      fs::layout::OpenFlags::from_bits\u001b[0m\n\u001b[0m      fs::layout::OpenFlags::from_bits_truncate\u001b[0m\n\u001b[0m      fs::layout::OpenFlags::from_bits_unchecked\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/fs/layout.rs:6:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mbitflags! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct OpenFlags: u32 {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        const O_RDONLY      =   0o0;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        const O_WRONLY      =   0o1;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|_^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `__impl_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: there is an associated constant `O_RDONLY` with a similar name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m251\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    if let Some(app_inode) = open_file(_path.as_str(), OpenFlags::\u001b[0m\u001b[0m\u001b[38;5;10mO_RDONLY\u001b[0m\u001b[0m) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                   \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find function `open_file` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/syscall/process.rs","byte_start":7692,"byte_end":7701,"line_start":251,"line_end":251,"column_start":30,"column_end":39,"is_primary":true,"text":[{"text":"    if let Some(app_inode) = open_file(_path.as_str(), OpenFlags::RDONLY) {","highlight_start":30,"highlight_end":39}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find function `open_file` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/syscall/process.rs:251:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m251\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if let Some(app_inode) = open_file(_path.as_str(), OpenFlags::RDONLY) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/syscall/mod.rs","byte_start":1653,"byte_end":1671,"line_start":52,"line_end":52,"column_start":45,"column_end":63,"is_primary":true,"text":[{"text":"        SYSCALL_FSTAT => sys_fstat(args[0], args[1] as *mut u8),","highlight_start":45,"highlight_end":63}],"label":"expected `*mut Stat`, found `*mut u8`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/syscall/mod.rs","byte_start":1634,"byte_end":1643,"line_start":52,"line_end":52,"column_start":26,"column_end":35,"is_primary":false,"text":[{"text":"        SYSCALL_FSTAT => sys_fstat(args[0], args[1] as *mut u8),","highlight_start":26,"highlight_end":35}],"label":"arguments to this function are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected raw pointer `*mut fs::layout::Stat`\n   found raw pointer `*mut u8`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/syscall/fs.rs","byte_start":2541,"byte_end":2554,"line_start":80,"line_end":80,"column_start":29,"column_end":42,"is_primary":false,"text":[{"text":"pub fn sys_fstat(fd: usize, st: *mut Stat) -> isize {","highlight_start":29,"highlight_end":42}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/syscall/fs.rs","byte_start":2520,"byte_end":2529,"line_start":80,"line_end":80,"column_start":8,"column_end":17,"is_primary":true,"text":[{"text":"pub fn sys_fstat(fd: usize, st: *mut Stat) -> isize {","highlight_start":8,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/syscall/mod.rs:52:45\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m52\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        SYSCALL_FSTAT => sys_fstat(args[0], args[1] as *mut u8),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `*mut Stat`, found `*mut u8`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12marguments to this function are incorrect\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected raw pointer `\u001b[0m\u001b[0m\u001b[1m\u001b[35m*mut fs::layout::Stat\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m              found raw pointer `\u001b[0m\u001b[0m\u001b[1m\u001b[35m*mut u8\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/syscall/fs.rs:80:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m80\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn sys_fstat(fd: usize, st: *mut Stat) -> isize {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find function `sys_task_info` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/syscall/mod.rs","byte_start":2078,"byte_end":2091,"line_start":60,"line_end":60,"column_start":30,"column_end":43,"is_primary":true,"text":[{"text":"        SYSCALL_TASK_INFO => sys_task_info(args[0] as *mut TaskInfo),","highlight_start":30,"highlight_end":43}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find function `sys_task_info` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/syscall/mod.rs:60:30\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m60\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        SYSCALL_TASK_INFO => sys_task_info(args[0] as *mut TaskInfo),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 36 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 36 previous errors\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0061, E0308, E0412, E0425, E0560, E0599.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0061, E0308, E0412, E0425, E0560, E0599.\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0061`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0061`.\u001b[0m\n"}
